{"data": {"securityAdvisories": {"nodes": [{"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWdwMm0tN2NmcC1oNmdm", "ghsaId": "GHSA-gp2m-7cfp-h6gf", "summary": "Moderate severity vulnerability that affects simplesamlphp/simplesamlphp", "description": "### Background\nWhen a SimpleSAMLphp Identity Provider is misconfigured, a bug in the software when trying to build a persistent `NameID` to univocally identify the authenticating subject could cause different users to get the same identifier generated, depending on the attributes available for them right after authentication.\n\nPlease note that even though this is possible thanks to a bug, **an IdP must be misconfigured** to release persistent `NameID`s even if it is not properly configured to generate them based on the specifics of the deployment.\n\n### Description\nPersistent `NameID`s will typically be sent as part of the `Subject` element of a SAML assertion, or as the contents of the `eduPersonTargetedID` attribute. Here is an example of such a `NameID`:\n\n    <NameID Format=\u201curn:oasis:names:tc:SAML:2.0:nameid-format:persistent\u201c>\n        zbonsm0Yn9Gnw14uQEEPr6AO7d+IvxwCQN3t+o24jYs=\n    </NameID>\n\nSome service providers will use this information to identify a user across sessions because a persistent `NameID` will never change for a given user. This could lead to different users accessing the same account in those service providers.\n\nIn order to be affected by this issue, the following circumstances must concur:\n\n- SimpleSAMLphp acts as an identity provider.\n- The service provider asking for authentication requests a persistent `NameID`.\n- No `saml:PersistentNameID` authentication processing filter is configured (neither for the whole IdP, nor for a given SP).\n- No `simplesaml.nameidattribute` configuration option is set (neither for the whole IdP, nor for a given SP).\n- One of the following alternatives:\n  - No `userid.attribute` configuration option is set **and** the users don't have an `eduPersonPrincipalName` attribute in the users backend, **or**\n  - the `userid.attribute` configuration option is set to an empty or missing attribute.\n\nIf all these requirements are met, the `SimpleSAML_Auth_ProcessingChain` class will try to keep a unique user identifier in the state array (`addUserID()` method). Bear in mind that this code is executed **before** all the authentication processing filters configured, meaning that only those attributes retrieved for the user during **initial authentication** will be available. If no `userid.attribute` configuration option is set, the default `eduPersonPrincipalName` will then be used. However, since it is missing, no identifier will be kept. Alternatively, if `userid.attribute` is set to a missing or empty attribute, the `addUserID()` method will abort trying to register an identifier.\n\nAfter executing all authentication processing filters, SimpleSAMLphp will build a SAML assertion. If the service provider requests persistent `NameID`s, SimpleSAMLphp will attempt to generate one given that none is already available (because the `saml:PersistentNameID` filter was not used). At this point, the code will look for the `simplesaml.nameidattribute` configuration option in either the local IdP metadata or in the remote SP metadata. If none of them are configured, it will default to the unique user identifier previously registered by `SimpleSAML_Auth_ProcessingChain`. If no identifier was kept there, the code will log an error message:\n\n    Unable to generate NameID. Check the userid.attribute option.\n\nHowever, instead of aborting the `NameID` generation at that point, it will go on and use a value missing from the state array as the source for the computation, meaning the `null` type will be used. Hence, all users connecting to a given service provider will get the same `NameID` generated, because all the input parameters will be the same:\n\n- The SP's entity identifier.\n- The IdP's entity identifier.\n- The `null` value.\n- The common secret salt from the main configuration.\n\n### Affected versions\nAll SimpleSAMLphp versions between 1.7.0 and 1.14.10, inclusive.\n\n### Impact\nThose identity providers affected by this bug and misconfigured as previously described could be issuing SAML assertions with common `NameID`s for all or a subset of their users. If a service provider uses those `NameID`s to identify the users of the affected IdP, all the users will be associated with the same user account at the service provider, causing all sorts of potential security issues like information disclosure or unauthorized access.\n\nWhile we can consider this unlikely to happen, some cases have been already observed. In particular, some identity providers using default configurations and consuming metadata automatically (i.e. using the _metarefresh_ module) while using a user backend like _Active Directory_ that does not populate `eduPersonPrincipalName` are particularly sensitive to this issue.\n\n### Resolution\nUpgrade to the latest version.\n\nConfigure a `saml:PersistentNameID` authentication processing filter according to your needs. Remember to check that **the attribute used as the source** for the `NameID` **is present at the moment the `saml:PersistentNameID` filter is executed**. The attribute used must be **unique** per user, and **must not change** over time.", "identifiers": [{"type": "GHSA", "value": "GHSA-gp2m-7cfp-h6gf"}, {"type": "CVE", "value": "CVE-2017-12873"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T21:28:06Z", "updatedAt": "2020-01-24T21:28:06Z", "references": [{"url": "https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-gp2m-7cfp-h6gf"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2017-12873"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.14.11"}, "package": {"ecosystem": "COMPOSER", "name": "simplesamlphp/simplesamlphp"}, "severity": "MODERATE", "updatedAt": "2020-01-24T21:24:47Z", "vulnerableVersionRange": ">= 1.7.0, < 1.14.11"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXA5Y20tcjdqZy04cTNn", "ghsaId": "GHSA-p9cm-r7jg-8q3g", "summary": "Moderate severity vulnerability that affects simplesamlphp/simplesamlphp", "description": "### Background\nAn incorrect check of return values in the signature validation utilities allows an attacker to get invalid signatures accepted as valid by forcing an error during validation.\n\n### Description\nThe `SimpleSAML_XML_Validator` class allows the verification of the XML digital signature of a SAML 1 message with a given key. In particular, the constructor of the class receives an XML node and a key to verify it and throws an exception in case there is an error, either caused by incorrect input or an invalid signature. This method uses the `verify()` method from the `RobRichards\\XMLSecDSig` class to verify the signature with the given key, which in turn will end up calling `openssl_verify()` depending on the signature algorithm used.\n\nThe `openssl_verify()` function returns `1` when the signature was successfully verified, `0` if it failed to verify with the given key and `-1` in case an error occurs. PHP allows translating numerical values to boolean implicitly, with the following correspondences:\n\n- `0` equals `false`\n- Non-zero equals `true`\n\nThis means that an implicit conversion to _boolean_ of the values returned by `openssl_verify()` will convert an error state, signaled by the value `-1`, to successful verification of the signature (represented by the _boolean_ `true`).\n\nThe aforementioned constructor was performing an implicit conversion to boolean of the values returned by the `verify()` method, which subsequently will return the same output as `openssl_verify()` under most circumstances. This means an error during signature verification is treated as a successful verification by the method.\n\n###  Affected versions\nAll SimpleSAMLphp versions prior to **1.14.11**.\n\n###  Impact\nUpon successful exploitation, an invalid signature would be regarded as valid by an affected version of the software. This allows attackers to modify or manually craft **SAML 1 response messages** and, by triggering a signature validation error in the affected party, get those messages accepted as valid and coming from a trusted entity. In practice, this means full capabilities to impersonate any individual at a given service provider.\n\nThe issue can be exploited to get other invalid messages accepted as valid, though the security implications there are minor.\n\nIn order to exploit the issue, **SAML 1.1 metadata must be registered by the vulnerable Service Provider for the Identity Provider targeted by the attacker** (in `metadata/shib13-idp-remote.php`), and an incorrect context must be fed to the signature validation routines, or an exceptional error must be triggered. So far, the following cases have been identified:\n\n- Using a DSA public key to validate an XML signature made with an RSA-related algorithm.\n- Using an RSA public key to validate an XML signature made with a DSA-related algorithm.\n- Exhausting available memory while verifying the signature.\n\nSimpleSAMLphp **does not support DSA signatures or keys**. Therefore, it is not possible for an attacker to feed an incorrect context by sending a signature with an incorrect algorithm. Upon reception of a DSA-SHA1 signature, SimpleSAMLphp will refuse to perform the validation due to the algorithm not being supported. On the other hand, if an attacker manages to trick a service provider operator to change the public key associated to a certain IdP to a DSA key, signatures made with any combination of the RSA algorithm will be accepted, regardless of whether they are valid or not. This means some serious misconfiguration or social engineering is needed in this case for a successful attack.\n\nRegarding memory exhaustion, it is in theory possible to attack a service provider causing the consumption of all available memory while a message with an invalid signature is being validated. However, memory exhaustion must happen only during signature validation and not immediately before or after. This means exploitation of this case is extremely difficult due to the small time window available for the attacker and the precise control that is needed over the service provider.\n\nAll in all, the consequences of this issue are critical, so even though we consider it difficult to exploit, and considering that other ways to trigger failures in signature validation could be possible but so far unidentified, we recommend updating the affected software as soon as possible.\n\n### Resolution\nUpgrade to the latest version.\n\n### Credit\nThis security issue was discovered and reported on December 3, 2016 by Thijs Kinkhorst.", "identifiers": [{"type": "GHSA", "value": "GHSA-p9cm-r7jg-8q3g"}, {"type": "CVE", "value": "CVE-2016-9955"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T21:27:42Z", "updatedAt": "2020-01-24T21:27:42Z", "references": [{"url": "https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-p9cm-r7jg-8q3g"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2016-9955"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.14.11"}, "package": {"ecosystem": "COMPOSER", "name": "simplesamlphp/simplesamlphp"}, "severity": "MODERATE", "updatedAt": "2020-01-24T21:21:46Z", "vulnerableVersionRange": "< 1.14.11"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJyM3YtcTl4My03ZzQ2", "ghsaId": "GHSA-2r3v-q9x3-7g46", "summary": "Low severity vulnerability that affects simplesamlphp/simplesamlphp", "description": "### Background\nSeveral scripts part of SimpleSAMLphp display a web page with links obtained from the request parameters. This allows us to enhance usability, as the users are presented with links they can follow after completing a certain action, like logging out.\n\n### Description\nThe following scripts were not checking the URLs obtained via the HTTP request before displaying them as the target of links that the user may click on:\n\n- `www/logout.php`\n- `modules/core/www/no_cookie.php`\n\nThe issue allowed attackers to display links targeting a malicious website inside a trusted site running SimpleSAMLphp, due to the lack of security checks involving the `link_href` and `retryURL` HTTP parameters, respectively. The issue was resolved by including a verification of the URLs received in the request against a white list of websites specified in the `trusted.url.domains` configuration option.\n\n### Affected versions\nAll SimpleSAMLphp versions prior to 1.14.4.\n\n### Impact\nA remote attacker could craft a link pointing to a trusted website running SimpleSAMLphp, including a parameter pointing to a malicious website, and try to fool the victim into visiting that website by clicking on a link in the page presented by SimpleSAMLphp.\n\n### Resolution\nUpgrade to the latest version.\n\n### Credit\nThis security issue was discovered and reported by John Page (hyp3rlinx).", "identifiers": [{"type": "GHSA", "value": "GHSA-2r3v-q9x3-7g46"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T21:27:16Z", "updatedAt": "2020-01-24T21:27:17Z", "references": [{"url": "https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-2r3v-q9x3-7g46"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.14.4"}, "package": {"ecosystem": "COMPOSER", "name": "simplesamlphp/simplesamlphp"}, "severity": "LOW", "updatedAt": "2020-01-24T21:15:59Z", "vulnerableVersionRange": "< 1.14.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW1qOXAtdjJyOC13Zjh3", "ghsaId": "GHSA-mj9p-v2r8-wf8w", "summary": "Low severity vulnerability that affects simplesamlphp/simplesamlphp", "description": "### Background\n\nSimpleSAMLphp allows users to report errors and failures to the system administrators via a web form. This web form gathers some contextual information automatically, but it also allows the user to provide their email address for follow-ups and a free-text explanation of what happened. Once submitted, the report is sent as an email to the administrative email address configured in the software.\n\n### Description\n\nThe `www/erroreport.php` script allows error reports to be submitted and sent to the system administrator. Starting with SimpleSAMLphp  1.18.0, a new `SimpleSAML\\Utils\\EMail` class was introduced to handle sending emails, implemented as a wrapper of an external dependency.\n\nThis new wrapper allows us to use Twig templates in order to create the email sent with an error report. Since Twig provides automatic escaping of variables, manual escaping of the free-text field in `www/errorreport.php` was removed to avoid double escaping. However, for those not using the new user interface yet, an email template is hardcoded into the class itself in plain PHP. Since no escaping is provided in this template, it is then possible to inject HTML inside the template by manually crafting the contents of the free-text field.\n\n### Affected versions\n\nSimpleSAMLphp versions 1.18.0 to 1.18.3, both inclusive.\n\n### Impact\n\nAn attacker may take advantage of this issue to manually craft a modified email sent via the error reporting mechanism, such as this email might trick a system administrator into performing an action, such as introducing their credentials into a phishing web site that resembles the original.\n\nRemote execution of javascript code is considered unfeasible since email clients do not run javascript present in emails, although there might be email clients which don't follow this rule, making the attack surface grow.\n\n### Resolution\n\nUpgrade the SimpleSAMLphp installation to version 1.18.4.\n\n### Credit\n\nThis vulnerability was discovered and reported by Frederic Vleminckx.", "identifiers": [{"type": "GHSA", "value": "GHSA-mj9p-v2r8-wf8w"}, {"type": "CVE", "value": "CVE-2020-5226"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T21:26:54Z", "updatedAt": "2020-01-24T21:26:54Z", "references": [{"url": "https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-mj9p-v2r8-wf8w"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5226"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.18.4"}, "package": {"ecosystem": "COMPOSER", "name": "simplesamlphp/simplesamlphp"}, "severity": "LOW", "updatedAt": "2020-01-24T21:09:38Z", "vulnerableVersionRange": ">= 1.18.0, < 1.18.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTZnYzYtbTM2NC04NXd3", "ghsaId": "GHSA-6gc6-m364-85ww", "summary": "Low severity vulnerability that affects simplesamlphp/simplesamlphp", "description": "### Background\n\nSimpleSAMLphp has a logging functionality that allows system administrators to keep track of the activity, errors, and statistics. Additionally, it allows users to report errors, shall they happen. An error report contains a report identifier, which is logged once submitted.\n\n### Description\n\nThe `www/erroreport.php` script, which receives error reports and sends them via email to the system administrator, didn't properly sanitize the report identifier obtained from the request. This allows an attacker, under specific circumstances, to inject new log lines by manually crafting this report ID.\n\nWhen configured to use the `file` logging handler, SimpleSAMLphp will output all its logs by appending each log line to a given file. Since the `reportID` parameter received in a request sent to `www/errorreport.php` was not properly sanitized, it was possible to inject newline characters into it, effectively allowing a malicious user to inject new log lines with arbitrary content.\n\n### Affected versions\n\nSimpleSAMLphp versions up to **1.18.3**.\n\n### Impact\n\nAn attacker may use this issue to inject logs messages into a SimpleSAMLphp log file, trying to trick or confuse system administrators. However, the attack surface is considered small, as the attack will only work with the `file` logging handler, which opens the log file in _append-only_ mode. This means an attacker cannot edit or remove existing log messages, and even if non-ascii characters are written to the log, the file will always be readable with a simple text editor.\n\n### Resolution\n\nUpgrade the SimpleSAMLphp installation to version **1.18.4**.\n\n### Credit\n\nThis vulnerability was discovered and reported by Frederic Vleminckx on January 23, 2020.", "identifiers": [{"type": "GHSA", "value": "GHSA-6gc6-m364-85ww"}, {"type": "CVE", "value": "CVE-2020-5225"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T21:26:13Z", "updatedAt": "2020-01-24T21:26:13Z", "references": [{"url": "https://github.com/simplesamlphp/simplesamlphp/security/advisories/GHSA-6gc6-m364-85ww"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5225"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.18.4"}, "package": {"ecosystem": "COMPOSER", "name": "simplesamlphp/simplesamlphp"}, "severity": "LOW", "updatedAt": "2020-01-24T20:46:17Z", "vulnerableVersionRange": "< 1.18.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTVmcTgtM3EyZi00bTVn", "ghsaId": "GHSA-5fq8-3q2f-4m5g", "summary": "Low severity vulnerability that affects django-user-sessions", "description": "### Impact\nThe views provided by django-user-sessions allow users to terminate specific sessions. The session key is used to identify sessions, and thus included in the rendered HTML. In itself this is not a problem. However if the website has an XSS vulnerability, the session key could be extracted by the attacker and a session takeover could happen.\n\n### Patches\nPatch is under way.\n\n### Workarounds\nRemove the session_key from the template.\n\n### References\n_None._\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Bouke/django-user-sessions](https://github.com/Bouke/django-user-sessions/issues)\n* Email us at [bouke@haarsma.eu](mailto:bouke@haarsma.eu)", "identifiers": [{"type": "GHSA", "value": "GHSA-5fq8-3q2f-4m5g"}, {"type": "CVE", "value": "CVE-2020-5224"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T19:56:59Z", "updatedAt": "2020-01-24T19:56:59Z", "references": [{"url": "https://github.com/Bouke/django-user-sessions/security/advisories/GHSA-5fq8-3q2f-4m5g"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5224"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.7.1"}, "package": {"ecosystem": "PIP", "name": "django-user-sessions"}, "severity": "LOW", "updatedAt": "2020-01-24T19:56:40Z", "vulnerableVersionRange": "< 1.7.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLThqNzItcDJ3bS02NzM4", "ghsaId": "GHSA-8j72-p2wm-6738", "summary": "Moderate severity vulnerability that affects privatebin/privatebin", "description": "On 24th of December 2019 one of the [property based unit tests](https://github.com/PrivateBin/PrivateBin/blob/master/tst/README.md#property-based-unit-testing) reported a [failure](https://travis-ci.org/PrivateBin/PrivateBin/jobs/629180605#L782). Upon investigation, [@elrido](https://github.com/elrido) discovered that the failure was due to unescaped HTML, which allowed the user provided attachment file name to inject HTML under certain conditions leading to a persistent [Cross-site scripting (XSS)](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerability. After committing an [initial fix](https://github.com/PrivateBin/PrivateBin/commit/8d0ac336d23cd8c98e71d5f21cdadcae9c8a26e6) to the master branch, the [issue was reported](https://github.com/PrivateBin/PrivateBin/issues/554) on 25th of December. Vulnerability write-up done by [@rugk](https://github.com/rugk) and [@elrido](https://github.com/elrido).  \nThe vulnerability has been fixed in [PrivateBin v1.3.2 & v1.2.2](https://privatebin.info/news/v1.3.2-v1.2.2-release.html). Admins are urged to upgrade to these versions to protect the affected users.\n\n## Affected versions\n\nAny PrivateBin version since 1.2.\n\n## Conditions\n\n* The configuration setting `fileupload` has to be enabled, as 1.3 displays an error when trying to open a paste with attachment.\n* The CSP header rules don't get applied. For example:\n  * They are unsupported or disabled in the visitors browser.\n  * They are filtered out by a some proxy server at the server or client side.\n  * The header is disabled/commented in the PHP-logic.\n  * The rules have been relaxed in the `cspheader` configuration setting.\n* A paste with a malicious filename is created.\n* A visitor of that paste clicks on the \"Clone\" button.\n\n## Proof of concept\n\nThe following method is just one possibility to exploit this issue and is provided as a proof of concept with steps to reproduce the issue. To avoid having to create an actual file with a rogue filename, one could use the [Python CLI client for PrivateBin](https://github.com/r4sas/PBinCLI/) and [edit line 56 in `format.py`](https://github.com/r4sas/PBinCLI/blob/682b47fbd3e24a8a53c3b484ba896a5dbc85cda2/pbincli/format.py#L56) as follows:\n\n```diff\n-        self._attachment_name = path_leaf(path)\n+        self._attachment_name = '<script>alert(\"\u2639\ufe0f\");//<a'\n```\n\nThe paste then can be created on a vulnerable instance:\n\n```shell\n$ python pbincli/cli.py send -t \" \" -f /dev/null -s https://privatebin.net/\n```\n\nVisiting the created paste on a vulnerable instance, with `fileupload` enabled and the CSP header weakened or disabled, and clicking the clone button will insert the HTML unescaped. In the above example, a pop-up would appear, when the script is executed.\n\n## Impact\n\nOn a vulnerable site pastes with malicious filenames can be created and users visiting these could inadvertently trigger the code execution when they click the \"Clone\" button. They could be instigated to do so via social engineering, like a paste text suggesting to \"clone and share\" the paste in question.\n\nThe attached file itself doesn't have to be empty and could be an image or document that would still be displayed inline as usual. The execution of the script triggered by clicking on the \"Clone\" button may occur silently in the background without showing any noticeable signs in browser. It may for instance be used to track visitors, start drive-by-downloads or similar. While we focus on script injection here, as it is the easiest exploit vector, it has to be said that anything else can be injected like CSS, images, videos, although the default CSP will block inline CSS and images, e.g.\n\nOn first visit, the filename isn't visible and is properly escaped when inserted into the download attribute. Only when clicking the \"Download attachment\" link would open a file save dialog with an odd name pre-filled, although browsers will convert illegal characters into valid ones, so it may not be identical to the one provided. Only when the \"Clone\" button has been clicked and after the exploit has already been triggered, the filename gets displayed. Note that an attacker can of course prevent this indicator of compromise to be shown and e.g. change the displayed text or obfuscate the filename by starting it with something harmless, like `image.png`, before opening the HTML tag.\n\n### Impact restrictions\n\nThe impact is mitigated by the fact that the vulnerability is, as far as our investigation concluded, paste-specific, i.e. opening a vulnerable paste can only compromise this one paste and no other pastes.\n\nFurthermore, as stated before, the impact is mitigated by the fact that we deploy a strong [CSP](https://content-security-policy.com/) that, by default, does not allow inline JS or other potentially easy methods that would allow an easy exploitation of the vulnerability.  \nThat said, we have to make users aware, that there may always be tricks to bypass such a CSP and the simple injection of HTML tags, e.g. destroying, faking or somehow phishing an HTML page does always remain a possibility.\n\nAs such, we treat this as a security vulnerability with medium severity. It is critical on it's own, but we believe that the deployed security mechanisms should prevent an exploit in practice in most cases.\n\n## Real-life impact\n\nWe checked all instances listed in the [PrivateBin directory in the Wiki](https://github.com/PrivateBin/PrivateBin/wiki/PrivateBin-Directory) and didn't find any 1.1, 1.2 or 1.3 instances that had the CSP headers disabled or in a state we know to be vulnerable. We used the following script, that may be adapted to check the CSP headers of any single instance:\n\n```shell\nfor URL in $(\n    curl -s https://raw.githubusercontent.com/wiki/PrivateBin/PrivateBin/PrivateBin-Directory.md | grep -Po '^http.*?(?= )'\n)\ndo\n    echo -n \"$URL: \"\n    curl -sLI $URL | grep -Poi 'content-security-policy.*script-src.?\\K.*?(?=;)' || echo 'No CSP detected!'\ndone\n```\n\nSome of the above sites do offer file uploads. On these instances, it is still possible that a visitor could have CSP support disabled in their browser, i.e. via a transparent proxy at their internet uplink or due to a browser plugin or some other locally installed, misguided security solution.\n\n**Important:** This scan is only a cursory check and _must not_ be taken as a security analysis of any means! You are always responsible for the security of your own instance. Please do check it manually!\n\n## Mitigation\n\nAs server administrators can't detect if a paste contains file attachments at all (apart from their size) in version 1.3 and due to the encrypted filename in older versions, as well as the risk for clients that don't apply the CSP settings, we urge them to upgrade to versions 1.3.2 or 1.2.2.\n\nIf you use v1.3, you could disable the `fileupload` setting to prevent pastes from getting displayed that may contain this vulnerability. Note that this will break all existing pastes with uploads, however, so we do _not_ recommend this, but advise you to upgrade to a fixed version instead.\n\n## Further information\n\nWe want to make potential third-party client authors aware of this vulnerability and urge them to double-check their implementations. If they develop a client that displays untrusted foreign data from a paste in a HTML site, please make sure to escape it to prevent XSS attacks. Such attacks can only be prevented when the paste is displayed, a mitigation when a paste is created is pointless, as a different client can be used during creation.\n\nWe do also acknowledge and want to highlight the benefit of the CSP, which has first been [introduced in PrivateBin v1.0](https://github.com/PrivateBin/PrivateBin/issues/10).\n\nHowever, we want to make you again aware that a whitelist-based CSP as we use, may [sometimes still be bypassed](https://csp.withgoogle.com/docs/faq.html#problems-with-whitelists), e.g. if you host a copy of the Angular library on the same domain as your PrivateBin instance.\nWe are aware of that and [do consider](https://github.com/PrivateBin/PrivateBin/issues/108) upgrading to a stronger CSP in the future.\n\n### Issue discovery\n\nWhile it is satisfying that our hard work on introducing unit tests has payed off in the discovery and mitigation of this vulnerability, it does also show a limitation of unit testing. A third party doing a code review would have certainly focused on how the project handles user provided input and may have discovered this much quicker.\n\nThe discovery wasn't due to the unit test checking for HTML input to get properly escaped, on the contrary, the test assumed input would not be changed. So other instances of HTML tags generated would have happily passed the test. Only when the test generated a fragment of a link (`<a`) it failed, because the DOM silently removed it when it inserted the string, as links within links aren't allowed. While the test was written to throw arbitrary strings at the `AttachmentViewer.moveAttachmentTo()` method, the test would only check that these got inserted into the DOM unchanged, oblivious of their potential significance when interpreted as HTML.\n\nThe [test had been introduced](https://github.com/PrivateBin/PrivateBin/commit/39860dfdc434c00d18342b4fb3bc6f5d0960030d) on December 3rd, 2017, 570 commits ago. Every commit on master and in PRs since introduction in that commit triggers these tests to run for every supported PHP version. Additional test cycles get run on developers local environments during working on commits. Hence the test suite must have run a few thousand times, testing 100 random strings each time. And only after more then 2 years a string containing `<a` got generated, triggered the error condition and 22 shrinks later the smallest failing test case was presented as:\n\n```\nFailed after 65 tests and 22 shrinks. rngState: 8b8f0d4ec2a67139b5; Counterexample: \"image/png\"; \"\"; \"\\u0000\"; \"<a\"; \"\";\n```\n\nDiscussion about a potential problem with that code, [did spark last September](https://github.com/PrivateBin/PrivateBin/pull/508#commitcomment-34943221), when the vulnerable code part was changed to the one before before the current fix, but was [incorrectly judged](https://github.com/PrivateBin/PrivateBin/pull/508#commitcomment-34944396) as not being a problem, because all of our translation strings are hardcoded. The fact that we do actually add some untrusted user-provided content, wasn't considered at that point.\n\nIt should also be mentioned, that the coverage report released for version 1.3.1 did highlight the line that caused this vulnerability as not being covered during testing:\n\n![Coverage report for version 1.3.1 showing missing test coverage for line causing vulnerability]({static}/img/vulnerability-2020-01-11/coverage.png)\n\nSo, in conclusion, it is great to have all of these tools at our disposal, but the code quality would benefit a lot more from having more eyeballs and brains on it.\n\n## Timeline\n\n* 2019-12-24 \u2013 Property based unit test fails in a commit pushed to a PR.\n* 2019-12-25 \u2013 Issue investigated, preliminary patch and issue description published.\n* 2019-12-30 \u2013 Further investigations, proof-of-concept exploit demonstrated on a vulnerable test instance.\n* 2020-01-03 \u2013 Discussed broader mitigation of user provided content injections, reviewed other possible cases.\n* 2020-01-04 \u2013 Published a second patch based on review, escapes HTML in translation.\n* 2020-01-05 \u2013 Started writing vulnerability report.\n* 2020-01-07 \u2013 Backported fix for 1.2.1.\n* 2020-01-11 \u2013 [Release published](https://github.com/PrivateBin/PrivateBin/releases/tag/1.3.2).\n* 2020-01-11 \u2013 Vulnerability details published.", "identifiers": [{"type": "GHSA", "value": "GHSA-8j72-p2wm-6738"}, {"type": "CVE", "value": "CVE-2020-5223"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-14T20:19:33Z", "updatedAt": "2020-01-24T15:31:37Z", "references": [{"url": "https://github.com/PrivateBin/PrivateBin/security/advisories/GHSA-8j72-p2wm-6738"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5223"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.2.2"}, "package": {"ecosystem": "COMPOSER", "name": "privatebin/privatebin"}, "severity": "MODERATE", "updatedAt": "2020-01-14T19:41:16Z", "vulnerableVersionRange": "< 1.2.2"}, {"firstPatchedVersion": {"identifier": "1.3.2"}, "package": {"ecosystem": "COMPOSER", "name": "privatebin/privatebin"}, "severity": "MODERATE", "updatedAt": "2020-01-14T19:41:16Z", "vulnerableVersionRange": ">= 1.3.0, < 1.3.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTdwbTQtZzJxai1qODV4", "ghsaId": "GHSA-7pm4-g2qj-j85x", "summary": "Low severity vulnerability that affects org.springframework:spring-webmvc and org.springframework:spring-webflux", "description": "Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.", "identifiers": [{"type": "GHSA", "value": "GHSA-7pm4-g2qj-j85x"}, {"type": "CVE", "value": "CVE-2020-5397"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-21T20:59:33Z", "updatedAt": "2020-01-24T15:30:45Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5397"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "5.2.3"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webmvc"}, "severity": "LOW", "updatedAt": "2020-01-21T20:51:38Z", "vulnerableVersionRange": ">= 5.2.0, < 5.2.3"}, {"firstPatchedVersion": {"identifier": "5.2.3"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webflux"}, "severity": "LOW", "updatedAt": "2020-01-21T20:51:38Z", "vulnerableVersionRange": ">= 5.2.0, < 5.2.3"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWh4aG0tOTZwcC0ybTQz", "ghsaId": "GHSA-hxhm-96pp-2m43", "summary": "High severity vulnerability that affects angular-expressions", "description": "### Impact\n\nThe vulnerability, reported by GoSecure Inc, allows Remote Code Execution, if you call `expressions.compile(userControlledInput)` where `userControlledInput` is text that comes from user input.\n\n* If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput).\n* If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution.\n\n### Patches\n\nUsers should upgrade to version 1.0.1 of angular-expressions\n\n### Workarounds\n\nA temporary workaround might be either to : \n\n* disable user-controlled input that will be fed into angular-expressions in your application\n\nOR\n\n* allow only following characters in the userControlledInput : \n\n```js\nif (/^[|a-zA-Z.0-9 :\"'+-?]+$/.test(userControlledInput)) {\n      var result = expressions.compile(userControlledInput);\n}\nelse {\n     result = undefined;\n}\n```\n\n### References\n\n[Removal of angular-expression sandbox](http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [angular-expressions](https://github.com/peerigon/angular-expressions/issues)\n* [Email us](mailto:contact@javascript-ninja.fr)\n\n### Credits \n\nThe issue was reported by Maxime Nadeau from GoSecure, Inc.", "identifiers": [{"type": "GHSA", "value": "GHSA-hxhm-96pp-2m43"}, {"type": "CVE", "value": "CVE-2020-5219"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-24T15:27:25Z", "updatedAt": "2020-01-24T15:27:25Z", "references": [{"url": "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-hxhm-96pp-2m43"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5219"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.0.1"}, "package": {"ecosystem": "NPM", "name": "angular-expressions"}, "severity": "HIGH", "updatedAt": "2020-01-24T15:27:07Z", "vulnerableVersionRange": "< 1.0.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTl4Y2otYzhjci04YzNj", "ghsaId": "GHSA-9xcj-c8cr-8c3c", "summary": "High severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core", "description": "When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.", "identifiers": [{"type": "GHSA", "value": "GHSA-9xcj-c8cr-8c3c"}, {"type": "CVE", "value": "CVE-2019-17563"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-26T18:22:26Z", "updatedAt": "2020-01-23T22:21:27Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17563"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "7.0.99"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.tomcat.embed:tomcat-embed-core"}, "severity": "HIGH", "updatedAt": "2019-12-26T18:22:04Z", "vulnerableVersionRange": "< 7.0.99"}, {"firstPatchedVersion": {"identifier": "8.5.50"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.tomcat.embed:tomcat-embed-core"}, "severity": "HIGH", "updatedAt": "2019-12-26T18:22:04Z", "vulnerableVersionRange": ">= 8.0.0, < 8.5.50"}, {"firstPatchedVersion": {"identifier": "9.0.30"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.tomcat.embed:tomcat-embed-core"}, "severity": "HIGH", "updatedAt": "2019-12-26T18:22:04Z", "vulnerableVersionRange": ">= 9.0.0, < 9.0.30"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWN3NnctcTg4ai02bXFm", "ghsaId": "GHSA-cw6w-q88j-6mqf", "summary": "High severity vulnerability that affects org.apache.cxf:cxf", "description": "Apache CXF before 3.3.4 and 3.2.11 provides all of the components that are required to build a fully fledged OpenId Connect service. There is a vulnerability in the access token services, where it does not validate that the authenticated principal is equal to that of the supplied clientId parameter in the request. If a malicious client was able to somehow steal an authorization code issued to another client, then they could exploit this vulnerability to obtain an access token for the other client.", "identifiers": [{"type": "GHSA", "value": "GHSA-cw6w-q88j-6mqf"}, {"type": "CVE", "value": "CVE-2019-12419"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-08T17:12:59Z", "updatedAt": "2020-01-23T22:17:01Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12419"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.2.11"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.cxf:cxf"}, "severity": "HIGH", "updatedAt": "2019-11-07T23:18:51Z", "vulnerableVersionRange": "< 3.2.11"}, {"firstPatchedVersion": {"identifier": "3.3.4"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.cxf:cxf"}, "severity": "HIGH", "updatedAt": "2019-11-07T23:18:51Z", "vulnerableVersionRange": ">= 3.3.0, < 3.3.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTU4cDgtOWc1OS1xMmhy", "ghsaId": "GHSA-58p8-9g59-q2hr", "summary": "Moderate severity vulnerability that affects org.apache.cxf:cxf", "description": "Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property \"attachment-max-count\".", "identifiers": [{"type": "GHSA", "value": "GHSA-58p8-9g59-q2hr"}, {"type": "CVE", "value": "CVE-2019-12406"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-08T17:15:11Z", "updatedAt": "2020-01-23T22:13:20Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12406"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.2.11"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.cxf:cxf"}, "severity": "MODERATE", "updatedAt": "2019-11-07T23:18:19Z", "vulnerableVersionRange": "< 3.2.11"}, {"firstPatchedVersion": {"identifier": "3.3.4"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.cxf:cxf"}, "severity": "MODERATE", "updatedAt": "2019-11-07T23:18:19Z", "vulnerableVersionRange": ">= 3.3.0, < 3.3.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXhxNTItcnY2dy0zOTdj", "ghsaId": "GHSA-xq52-rv6w-397c", "summary": "Moderate severity vulnerability that affects secure_headers", "description": "### Impact\n\nIf user-supplied input was passed into `append/override_content_security_policy_directives`, a semicolon could be injected leading to directive injection.\n\nThis could be used to e.g. override a `script-src` directive. Duplicate directives are ignored and the first one wins. The directives in `secure_headers` are sorted alphabetically so they pretty much all come before `script-src`. A previously undefined directive would receive a value even if `SecureHeaders::OPT_OUT` was supplied.\n\nThe fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s.\n\n> Duplicate script-src directives detected.  All but the first instance will be ignored.\n\nSee https://www.w3.org/TR/CSP3/#parse-serialized-policy\n\n> Note: In this case, the user agent SHOULD notify developers that a duplicate directive was ignored. A console warning might be appropriate, for example.\n\n### Patches\n\nDepending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.\n\n### Workarounds\n\nIf you are passing user input into the above methods, you could filter out the input:\n\n```ruby\noverride_content_security_policy_directives(:frame_src, [user_input.gsub(\";\", \" \")])\n```\n\n### References\n\nReported in https://github.com/twitter/secure_headers/issues/418\nhttps://www.w3.org/TR/CSP3/#parse-serialized-policy\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repo](https://github.com/twitter/secure_headers/issues/new)\n* DM @ndm on twitter ", "identifiers": [{"type": "GHSA", "value": "GHSA-xq52-rv6w-397c"}, {"type": "CVE", "value": "CVE-2020-5217"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-23T02:28:11Z", "updatedAt": "2020-01-23T02:28:11Z", "references": [{"url": "https://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5217"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.2.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "secure_headers"}, "severity": "MODERATE", "updatedAt": "2020-01-23T02:12:05Z", "vulnerableVersionRange": ">= 6.0.0, < 6.2.0"}, {"firstPatchedVersion": {"identifier": "5.1.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "secure_headers"}, "severity": "MODERATE", "updatedAt": "2020-01-23T02:12:05Z", "vulnerableVersionRange": ">= 5.0.0, < 5.1.0"}, {"firstPatchedVersion": {"identifier": "3.8.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "secure_headers"}, "severity": "MODERATE", "updatedAt": "2020-01-23T02:12:05Z", "vulnerableVersionRange": "< 3.8.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXc5Nzgtcm1wZi1xbXdn", "ghsaId": "GHSA-w978-rmpf-qmwg", "summary": "Moderate severity vulnerability that affects secure_headers", "description": "### Impact\n\nIf user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection.\n\nUpon seeing a newline in the header, rails will silently create a new `Content-Security-Policy` header with the remaining value of the original string. It will continue to create new headers for each newline.\n\ne.g.\n\n```ruby\noverride_content_security_directives(script_src: ['mycdn.com', \"\\ninjected\\n\"])` \n```\n\nwould result in \n\n```\nContent-Security-Policy: ... script-src: mycdn.com\nContent-Security-Policy: injected\nContent-Security-Policy: rest-of-the-header\n```\n\nCSP supports multiple headers and all policies must be satisfied for execution to occur, but a malicious value that reports the current page is fairly trivial:\n\n```ruby\noverride_content_security_directives(script_src: [\"mycdn.com\", \"\\ndefault-src 'none'; report-uri evil.com\"]) \n```\n```\nContent-Security-Policy: ... script-src: mycdn.com\nContent-Security-Policy: default-src 'none'; report-uri evil.com\nContent-Security-Policy: rest-of-the-header\n```\n\n### Patches\n\nThis has been fixed in 6.3.0, 5.2.0, and 3.9.0\n\n### Workarounds\n\n```ruby\noverride_content_security_policy_directives(:frame_src, [user_input.gsub(\"\\n\", \" \")])\n```\n\n### References\n\nhttps://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c\n[The effect of multiple policies](https://www.w3.org/TR/CSP3/#multiple-policies)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repo](https://github.com/twitter/secure_headers/security/advisories/new)\n* DM us at @ndm on twitter", "identifiers": [{"type": "GHSA", "value": "GHSA-w978-rmpf-qmwg"}, {"type": "CVE", "value": "CVE-2020-5216"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-23T02:27:53Z", "updatedAt": "2020-01-23T02:27:53Z", "references": [{"url": "https://github.com/twitter/secure_headers/security/advisories/GHSA-w978-rmpf-qmwg"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5216"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.3.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "secure_headers"}, "severity": "MODERATE", "updatedAt": "2020-01-23T02:27:18Z", "vulnerableVersionRange": ">= 6.0.0, < 6.3.0"}, {"firstPatchedVersion": {"identifier": "5.2.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "secure_headers"}, "severity": "MODERATE", "updatedAt": "2020-01-23T02:27:18Z", "vulnerableVersionRange": ">= 5.0.0, < 5.2.0"}, {"firstPatchedVersion": {"identifier": "3.9.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "secure_headers"}, "severity": "MODERATE", "updatedAt": "2020-01-23T02:27:18Z", "vulnerableVersionRange": "< 3.9.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWg5Mm0tNDJoNC04MmY2", "ghsaId": "GHSA-h92m-42h4-82f6", "summary": "High severity vulnerability that affects postfix-mta-sts-resolver", "description": "## Incorrect query parsing\r\n\r\n### Impact\r\nAll users of versions prior to 0.5.1 can receive incorrect response from daemon under rare conditions, rendering downgrade of effective STS policy.\r\n\r\n### Patches\r\nProblem has been patched in version 0.5.1\r\n\r\n### Workarounds\r\nUsers may remediate this vulnerability without upgrading by applying [these patches](https://gist.github.com/Snawoot/b9da85d6b26dea5460673b29df1adc6b) to older suppoorted versions.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [postfix-mta-sts-resolver repo](https://github.com/Snawoot/postfix-mta-sts-resolver)\r\n* Email me at [vladislav at vm-0 dot com](mailto:vladislav-ex-gh-advisory@vm-0.com)\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-h92m-42h4-82f6"}, {"type": "CVE", "value": "CVE-2019-16791"}], "origin": "UNSPECIFIED", "publishedAt": "2019-07-05T21:06:58Z", "updatedAt": "2020-01-22T01:40:32Z", "references": [{"url": "https://github.com/Snawoot/postfix-mta-sts-resolver/security/advisories/GHSA-h92m-42h4-82f6"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16791"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.5.1"}, "package": {"ecosystem": "PIP", "name": "postfix-mta-sts-resolver"}, "severity": "HIGH", "updatedAt": "2019-06-13T16:21:20Z", "vulnerableVersionRange": "< 0.5.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTZ4M3YtcncycS05Z3g3", "ghsaId": "GHSA-6x3v-rw2q-9gx7", "summary": "High severity vulnerability that affects org.infinispan:infinispan-core", "description": "A flaw was found in Infinispan through version 9.4.14.Final. An improper implementation of the session fixation protection in the Spring Session integration can result in incorrect session handling.", "identifiers": [{"type": "GHSA", "value": "GHSA-6x3v-rw2q-9gx7"}, {"type": "CVE", "value": "CVE-2019-10158"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-21T21:18:44Z", "updatedAt": "2020-01-21T21:18:44Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10158"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "10.0.0"}, "package": {"ecosystem": "MAVEN", "name": "org.infinispan:infinispan-core"}, "severity": "HIGH", "updatedAt": "2020-01-21T21:18:21Z", "vulnerableVersionRange": "< 10.0.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTh3eDItOXE0OC12bTly", "ghsaId": "GHSA-8wx2-9q48-vm9r", "summary": "High severity vulnerability that affects org.springframework:spring-webmvc and org.springframework:spring-webflux", "description": "In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a \"Content-Disposition\" header in the response where the filename attribute is derived from user supplied input.", "identifiers": [{"type": "GHSA", "value": "GHSA-8wx2-9q48-vm9r"}, {"type": "CVE", "value": "CVE-2020-5398"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-21T20:59:09Z", "updatedAt": "2020-01-21T20:59:09Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2020-5398"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "5.2.3"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webmvc"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:49:18Z", "vulnerableVersionRange": ">= 5.2.0, < 5.2.3"}, {"firstPatchedVersion": {"identifier": "5.1.13"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webmvc"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:49:18Z", "vulnerableVersionRange": ">= 5.1.0, < 5.1.13"}, {"firstPatchedVersion": {"identifier": "5.0.16"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webmvc"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:49:18Z", "vulnerableVersionRange": ">= 5.0.0, < 5.0.16"}, {"firstPatchedVersion": {"identifier": "5.2.3"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webflux"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:49:18Z", "vulnerableVersionRange": ">= 5.2.0, < 5.2.3"}, {"firstPatchedVersion": {"identifier": "5.1.13"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webflux"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:49:18Z", "vulnerableVersionRange": ">= 5.1.0, < 5.1.13"}, {"firstPatchedVersion": {"identifier": "5.0.16"}, "package": {"ecosystem": "MAVEN", "name": "org.springframework:spring-webflux"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:49:18Z", "vulnerableVersionRange": ">= 5.0.0, < 5.0.16"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTVxY2ctdzJjYy14ZmZ3", "ghsaId": "GHSA-5qcg-w2cc-xffw", "summary": "High severity vulnerability that affects validators", "description": "The validators package 0.12.2 through 0.12.5 for Python enters an infinite loop when validators.domain is called with a crafted domain string. This is fixed in 0.12.6.", "identifiers": [{"type": "GHSA", "value": "GHSA-5qcg-w2cc-xffw"}, {"type": "CVE", "value": "CVE-2019-19588"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-21T20:32:09Z", "updatedAt": "2020-01-21T20:32:09Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19588"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.12.6"}, "package": {"ecosystem": "PIP", "name": "validators"}, "severity": "HIGH", "updatedAt": "2020-01-21T20:31:41Z", "vulnerableVersionRange": ">= 0.12.2, < 0.12.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXZmcTYtaHE1ci0yN3I2", "ghsaId": "GHSA-vfq6-hq5r-27r6", "summary": "Moderate severity vulnerability that affects Django", "description": "Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)", "identifiers": [{"type": "GHSA", "value": "GHSA-vfq6-hq5r-27r6"}, {"type": "CVE", "value": "CVE-2019-19844"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-16T22:35:12Z", "updatedAt": "2020-01-16T22:35:12Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19844"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.11.27"}, "package": {"ecosystem": "PIP", "name": "Django"}, "severity": "MODERATE", "updatedAt": "2020-01-16T22:35:00Z", "vulnerableVersionRange": "< 1.11.27"}, {"firstPatchedVersion": {"identifier": "2.2.9"}, "package": {"ecosystem": "PIP", "name": "Django"}, "severity": "MODERATE", "updatedAt": "2020-01-16T22:35:00Z", "vulnerableVersionRange": ">= 2.0.0, < 2.2.9"}, {"firstPatchedVersion": {"identifier": "3.0.1"}, "package": {"ecosystem": "PIP", "name": "Django"}, "severity": "MODERATE", "updatedAt": "2020-01-16T22:35:00Z", "vulnerableVersionRange": ">= 3.0.0, < 3.0.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTdmY2otcHE5ai13aDJy", "ghsaId": "GHSA-7fcj-pq9j-wh2r", "summary": "High severity vulnerability that affects PyInstaller", "description": "### Impact\n\nLocal Privilege Escalation in all Windows software frozen by PyInstaller in \"onefile\" mode.\n\nThe vulnerability is present only on Windows and in this particular case: If a **software frozen by PyInstaller in \"onefile\" mode** is launched by a (privileged) user who has **his/her \"TempPath\" resolving to a world writable directory**. This is the case e.g. if the software is launched as a service or as a scheduled task using a system account (in which case TempPath will default to C:\\Windows\\Temp).\n\nIn order to be exploitable the software has to be (re)started after the attacker has launched the exploit program. So for a service launched at startup, a service restart is needed (e.g. after a crash or an upgrade).\n\nWhile PyInstaller itself was not vulnerable, all Windows software frozen by PyInstaller in \"onefile\" mode is vulnerable.\n\nCVSSv3 score 7.0 (High)\nCVSSv3 vector CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H\n\nAffected\n- all Windows software frozen by PyInstaller in \"onefile\" mode\n\nNo affected\n- PyInstaller itself (except if frozen by PyInstaller in \"onefile\" mode on Windows)\n- software frozen in \"one*dir*\" mode\n- other platforms (GNU/Linux, OS X, BSD, etc.)\n\n### Patches\nThe problem is patched in commits 42a67148b3bdf9211fda8499fdc5b63acdd7e6cc (fixed code) and be948cf0954707671aa499da17b10c86b6fa5e5c (recompiled bootloaders). Users should upgrade to PyInstaller version 3.6 and rebuild their software.\n\n### Workarounds\nThere is no known workaround. Users using PyInstaller to freeze their Windows software using \"onefile\" mode should upgrade PyInstaller and rebuild their software.\n\n### Credits\nThis vulnerability was discovered and reported by Farid AYOUJIL (@faridtsl), David HA, Florent LE NIGER and Yann GASCUEL (@lnv42) from Alter Solutions (@AlterSolutions) and fixed in collaboration with\nHartmut Goebel (@htgoebel, maintainer of PyInstaller).\n\n### Funding Development\n\nPyInstaller is in urgent need of funding to make future security fixes happen, see <https://github.com/pyinstaller/pyinstaller/issues/4404> for details.", "identifiers": [{"type": "GHSA", "value": "GHSA-7fcj-pq9j-wh2r"}, {"type": "CVE", "value": "CVE-2019-16784"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-16T22:18:27Z", "updatedAt": "2020-01-16T22:18:27Z", "references": [{"url": "https://github.com/pyinstaller/pyinstaller/security/advisories/GHSA-7fcj-pq9j-wh2r"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16784"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.6"}, "package": {"ecosystem": "PIP", "name": "PyInstaller"}, "severity": "HIGH", "updatedAt": "2020-01-14T20:09:52Z", "vulnerableVersionRange": "< 3.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXI1Z20tNHA1dy1wcTJw", "ghsaId": "GHSA-r5gm-4p5w-pq2p", "summary": "High severity vulnerability that affects verot/class.upload.php", "description": "class.upload.php in verot.net class.upload before 1.0.3 and 2.x before 2.0.4, as used in the K2 extension for Joomla! and other products, omits .phar from the set of dangerous file extensions.", "identifiers": [{"type": "GHSA", "value": "GHSA-r5gm-4p5w-pq2p"}, {"type": "CVE", "value": "CVE-2019-19576"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-16T22:17:40Z", "updatedAt": "2020-01-16T22:17:40Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19576"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.0.3"}, "package": {"ecosystem": "COMPOSER", "name": "verot/class.upload.php"}, "severity": "HIGH", "updatedAt": "2020-01-16T22:17:27Z", "vulnerableVersionRange": "< 1.0.3"}, {"firstPatchedVersion": {"identifier": "2.0.4"}, "package": {"ecosystem": "COMPOSER", "name": "verot/class.upload.php"}, "severity": "HIGH", "updatedAt": "2020-01-16T22:17:27Z", "vulnerableVersionRange": ">= 2.0.0, < 2.0.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWpnamMtMzMyYy04Y21j", "ghsaId": "GHSA-jgjc-332c-8cmc", "summary": "High severity vulnerability that affects phpmyadmin/phpmyadmin", "description": "An issue was discovered in phpMyAdmin before 4.9.2. A crafted database/table name can be used to trigger a SQL injection attack through the designer feature.", "identifiers": [{"type": "GHSA", "value": "GHSA-jgjc-332c-8cmc"}, {"type": "CVE", "value": "CVE-2019-18622"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-16T21:56:15Z", "updatedAt": "2020-01-16T21:56:15Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18622"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.9.2"}, "package": {"ecosystem": "COMPOSER", "name": "phpmyadmin/phpmyadmin"}, "severity": "HIGH", "updatedAt": "2020-01-16T21:54:56Z", "vulnerableVersionRange": "< 4.9.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW04cDItNDk1aC1jY21o", "ghsaId": "GHSA-m8p2-495h-ccmh", "summary": "Moderate severity vulnerability that affects org.hibernate.validator:hibernate-validator", "description": "A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.", "identifiers": [{"type": "GHSA", "value": "GHSA-m8p2-495h-ccmh"}, {"type": "CVE", "value": "CVE-2019-10219"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-08T17:01:52Z", "updatedAt": "2020-01-16T17:24:10Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10219"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.0.18"}, "package": {"ecosystem": "MAVEN", "name": "org.hibernate.validator:hibernate-validator"}, "severity": "MODERATE", "updatedAt": "2020-01-16T17:24:09Z", "vulnerableVersionRange": "< 6.0.18"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXY2MmotZmN4cS1qMjM5", "ghsaId": "GHSA-v62j-fcxq-j239", "summary": "Moderate severity vulnerability that affects org.apache.atlas:apache-atlas", "description": "Apache Atlas versions 0.8.3 and 1.1.0 were found vulnerable to Stored Cross-Site Scripting in the search functionality", "identifiers": [{"type": "GHSA", "value": "GHSA-v62j-fcxq-j239"}, {"type": "CVE", "value": "CVE-2019-10070"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-08T17:26:53Z", "updatedAt": "2020-01-08T17:26:54Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10070"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.8.4"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.atlas:apache-atlas"}, "severity": "MODERATE", "updatedAt": "2020-01-08T17:26:05Z", "vulnerableVersionRange": "< 0.8.4"}, {"firstPatchedVersion": {"identifier": "1.2.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.atlas:apache-atlas"}, "severity": "MODERATE", "updatedAt": "2020-01-08T17:26:05Z", "vulnerableVersionRange": ">= 1.0.0, < 1.2.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWdmOGotdjh4NS1oOXFw", "ghsaId": "GHSA-gf8j-v8x5-h9qp", "summary": "Moderate severity vulnerability that affects enshrined/svg-sanitize", "description": "enshrined/svg-sanitize before 0.12.0 mishandles script and data values in attributes, as demonstrated by unexpected whitespace such as in the javascript&#9;:alert substring.", "identifiers": [{"type": "GHSA", "value": "GHSA-gf8j-v8x5-h9qp"}, {"type": "CVE", "value": "CVE-2019-18857"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-08T17:15:37Z", "updatedAt": "2020-01-08T17:15:37Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18857"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.12.0"}, "package": {"ecosystem": "COMPOSER", "name": "enshrined/svg-sanitize"}, "severity": "MODERATE", "updatedAt": "2020-01-08T17:15:06Z", "vulnerableVersionRange": "< 0.12.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTc2OWYtNTM5di1mNWpn", "ghsaId": "GHSA-769f-539v-f5jg", "summary": "High severity vulnerability that affects prestashop/gamification", "description": "### Impact\n\nWe have identified that some gamification module ZIP archives have been built with phpunit dev dependencies. PHPUnit contains a php script that would allow, on a webserver, an attacker to perform a RCE.\n\nThis vulnerability impacts\n- phpunit before 4.8.28 and 5.x before 5.6.3 as reported in [CVE-2017-9841](https://nvd.nist.gov/vuln/detail/CVE-2017-9841)\n- phpunit >= 5.63 before 7.5.19 and 8.5.1 (this is a newly found vulnerability that is currently being submitted as a CVE after disclosure was provided to phpunit maintainers)\n\nYou can read PrestaShop official statement about this vulnerability [here](https://build.prestashop.com/news/critical-security-vulnerability-in-prestashop-modules/).\n\n### Patches\n\nIn the [security patch](https://github.com/PrestaShop/gamification/releases/tag/v2.3.2), we look for the unwanted vendor/phpunit folder and remove it if we find it. This allows users to fix the security issue when upgrading.\n\n### Workarounds\nUsers can also simply remove the unwanted vendor/phpunit folder.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-9841\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@prestashop.com", "identifiers": [{"type": "GHSA", "value": "GHSA-769f-539v-f5jg"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-08T03:10:44Z", "updatedAt": "2020-01-08T03:10:44Z", "references": [{"url": "https://github.com/PrestaShop/gamification/security/advisories/GHSA-769f-539v-f5jg"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.3.2"}, "package": {"ecosystem": "COMPOSER", "name": "prestashop/gamification"}, "severity": "HIGH", "updatedAt": "2020-01-08T03:10:08Z", "vulnerableVersionRange": "< 2.3.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXdxcTgtbXFqOS02OTdm", "ghsaId": "GHSA-wqq8-mqj9-697f", "summary": "High severity vulnerability that affects prestashop/autoupgrade", "description": "### Impact\n\nWe have identified that some autoupgrade module ZIP archives have been built with phpunit dev dependencies. PHPUnit contains a php script that would allow, on a webserver, an attacker to perform a RCE.\n\nThis vulnerability impacts\n- phpunit before 4.8.28 and 5.x before 5.6.3 as reported in [CVE-2017-9841](https://nvd.nist.gov/vuln/detail/CVE-2017-9841)\n- phpunit >= 5.63 before 7.5.19 and 8.5.1 (this is a newly found vulnerability that is currently being submitted as a CVE after disclosure was provided to phpunit maintainers)\n\nYou can read PrestaShop official statement about this vulnerability [here](https://build.prestashop.com/news/critical-security-vulnerability-in-prestashop-modules/).\n\n### Patches\n\nIn the [security patch](https://github.com/PrestaShop/autoupgrade/releases/tag/v4.10.1), we look for the unwanted vendor/phpunit folder and remove it if we find it. This allows users to fix the security issue when upgrading.\n\n### Workarounds\nUsers can also simply remove the unwanted vendor/phpunit folder.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-9841\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@prestashop.com", "identifiers": [{"type": "GHSA", "value": "GHSA-wqq8-mqj9-697f"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-08T03:10:30Z", "updatedAt": "2020-01-08T03:10:30Z", "references": [{"url": "https://github.com/PrestaShop/autoupgrade/security/advisories/GHSA-wqq8-mqj9-697f"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.10.1"}, "package": {"ecosystem": "COMPOSER", "name": "prestashop/autoupgrade"}, "severity": "HIGH", "updatedAt": "2020-01-08T03:06:58Z", "vulnerableVersionRange": ">= 4.0.0, < 4.10.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWY4ODQtZ204Ni1jZzNx", "ghsaId": "GHSA-f884-gm86-cg3q", "summary": "High severity vulnerability that affects prestashop/ps_facetedsearch", "description": "### Impact\n\nWe have identified that some ps_facetedsearch module ZIP archives have been built with phpunit dev dependencies. PHPUnit contains a php script that would allow, on a webserver, an attacker to perform a RCE.\n\nThis vulnerability impacts\n- phpunit before 4.8.28 and 5.x before 5.6.3 as reported in [CVE-2017-9841](https://nvd.nist.gov/vuln/detail/CVE-2017-9841)\n- phpunit >= 5.63 before 7.5.19 and 8.5.1 (this is a newly found vulnerability that is currently being submitted as a CVE after disclosure was provided to phpunit maintainers)\n\n### Patches\n\nIn the [security patch](https://github.com/PrestaShop/ps_facetedsearch/releases/tag/v3.4.1), we look for the unwanted vendor/phpunit folder and remove it if we find it. This allows users to fix the security issue when upgrading.\n\n### Workarounds\nUsers can also simply remove the unwanted vendor/phpunit folder.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-9841\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@prestashop.com", "identifiers": [{"type": "GHSA", "value": "GHSA-f884-gm86-cg3q"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-07T17:20:47Z", "updatedAt": "2020-01-07T17:20:47Z", "references": [{"url": "https://github.com/PrestaShop/ps_facetedsearch/security/advisories/GHSA-f884-gm86-cg3q"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.4.1"}, "package": {"ecosystem": "COMPOSER", "name": "prestashop/ps_facetedsearch"}, "severity": "HIGH", "updatedAt": "2020-01-07T17:20:15Z", "vulnerableVersionRange": "< 3.4.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTk2OGYtNjZyNS01djc0", "ghsaId": "GHSA-968f-66r5-5v74", "summary": "High severity vulnerability that affects waitress", "description": "### Impact\n\nThe patches introduced to fix https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4 were not complete and still would allow an attacker to smuggle requests/split a HTTP request with invalid data.\n\nThis updates the existing CVE with ID: CVE-2019-16789\n\n### Patches\n\nWaitress version 1.4.2 has been updated to now validate HTTP headers better to avoid the issue, completely fixing all known issues with whitespace.\n\n### Workarounds\n\nThere are no work-arounds, upgrading to Waitress 1.4.2 is highly recommended.\n\n### References\n\nSee https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4 for more information on the security issue.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)", "identifiers": [{"type": "GHSA", "value": "GHSA-968f-66r5-5v74"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-06T18:44:21Z", "updatedAt": "2020-01-06T18:44:22Z", "references": [{"url": "https://github.com/Pylons/waitress/security/advisories/GHSA-968f-66r5-5v74"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.2"}, "package": {"ecosystem": "PIP", "name": "waitress"}, "severity": "HIGH", "updatedAt": "2020-01-06T18:43:13Z", "vulnerableVersionRange": "< 1.4.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTkydm0td2ZtNS1teHZ2", "ghsaId": "GHSA-92vm-wfm5-mxvv", "summary": "Low severity vulnerability that affects cookie-signature", "description": "Node-cookie-signature before 1.0.4 is affected by a timing attack due to the type of comparison used.", "identifiers": [{"type": "GHSA", "value": "GHSA-92vm-wfm5-mxvv"}, {"type": "CVE", "value": "CVE-2016-1000236"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-06T18:44:10Z", "updatedAt": "2020-01-06T18:44:10Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2016-1000236"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.0.4"}, "package": {"ecosystem": "NPM", "name": "cookie-signature"}, "severity": "LOW", "updatedAt": "2019-12-27T22:19:49Z", "vulnerableVersionRange": "< 1.0.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJxcmcteDIyOS0zdjhx", "ghsaId": "GHSA-2qrg-x229-3v8q", "summary": "Moderate severity vulnerability that affects log4j:log4j", "description": "Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.", "identifiers": [{"type": "GHSA", "value": "GHSA-2qrg-x229-3v8q"}, {"type": "CVE", "value": "CVE-2019-17571"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-06T18:43:49Z", "updatedAt": "2020-01-06T18:43:49Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17571"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": null, "package": {"ecosystem": "MAVEN", "name": "log4j:log4j"}, "severity": "MODERATE", "updatedAt": "2019-12-27T22:02:40Z", "vulnerableVersionRange": ">= 1.2, <= 1.2.27"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWZ4cGgtcTNqOC1tdjg3", "ghsaId": "GHSA-fxph-q3j8-mv87", "summary": "Moderate severity vulnerability that affects org.apache.logging.log4j:log4j", "description": "In Apache Log4j 2.x before 2.8.2, when using the TCP socket server or UDP socket server to receive serialized log events from another application, a specially crafted binary payload can be sent that, when deserialized, can execute arbitrary code.", "identifiers": [{"type": "GHSA", "value": "GHSA-fxph-q3j8-mv87"}, {"type": "CVE", "value": "CVE-2017-5645"}], "origin": "UNSPECIFIED", "publishedAt": "2020-01-06T18:43:38Z", "updatedAt": "2020-01-06T18:43:38Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2017-5645"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.8.2"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.logging.log4j:log4j"}, "severity": "MODERATE", "updatedAt": "2019-12-27T22:02:31Z", "vulnerableVersionRange": ">= 2.0, < 2.8.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWZwcXAtdjMyMy00NHh2", "ghsaId": "GHSA-fpqp-v323-44xv", "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger", "description": "Policy import functionality in Apache Ranger 0.7.0 to 1.2.0 is vulnerable to a cross-site scripting issue. Upgrade to 2.0.0 or later version of Apache Ranger with the fix.", "identifiers": [{"type": "GHSA", "value": "GHSA-fpqp-v323-44xv"}, {"type": "CVE", "value": "CVE-2019-12397"}], "origin": "UNSPECIFIED", "publishedAt": "2019-08-16T14:01:35Z", "updatedAt": "2019-12-31T18:52:16Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12397"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.0.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.ranger:ranger"}, "severity": "MODERATE", "updatedAt": "2019-08-09T15:38:45Z", "vulnerableVersionRange": ">= 0.7.0, <= 1.2.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWg0N2otaGM2eC1oM3Fx", "ghsaId": "GHSA-h47j-hc6x-h3qq", "summary": "High severity vulnerability that affects mongo-express", "description": "### Impact\n\nRemote code execution on the host machine by any authenticated user.\n\n### Proof Of Concept\n\nLaunching mongo-express on a Mac, pasting the following into the \"create index\" field will pop open the Mac calculator:\n\n```javascript\nthis.constructor.constructor(\"return process\")().mainModule.require('child_process').execSync('/Applications/Calculator.app/Contents/MacOS/Calculator')\n```\n\n### Patches\nUsers should upgrade to version `0.54.0`\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n### References\n[Snyk Security Advisory](https://snyk.io/vuln/SNYK-JS-MONGOEXPRESS-473215)\n[CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10758)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)\n\n#### Thanks\n\n@JLLeitschuh for finding and reporting this vulnerability", "identifiers": [{"type": "GHSA", "value": "GHSA-h47j-hc6x-h3qq"}, {"type": "CVE", "value": "CVE-2019-10758"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-30T19:30:31Z", "updatedAt": "2019-12-30T19:30:31Z", "references": [{"url": "https://github.com/mongo-express/mongo-express/security/advisories/GHSA-h47j-hc6x-h3qq"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10758"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.54.0"}, "package": {"ecosystem": "NPM", "name": "mongo-express"}, "severity": "HIGH", "updatedAt": "2019-12-30T19:29:04Z", "vulnerableVersionRange": "< 0.54.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWhoM2oteDRtYy1nNDhy", "ghsaId": "GHSA-hh3j-x4mc-g48r", "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core", "description": "When Apache Tomcat 9.0.0.M1 to 9.0.28, 8.5.0 to 8.5.47, 7.0.0 and 7.0.97 is configured with the JMX Remote Lifecycle Listener, a local attacker without access to the Tomcat process or configuration files is able to manipulate the RMI registry to perform a man-in-the-middle attack to capture user names and passwords used to access the JMX interface. The attacker can then use these credentials to access the JMX interface and gain complete control over the Tomcat instance.", "identifiers": [{"type": "GHSA", "value": "GHSA-hh3j-x4mc-g48r"}, {"type": "CVE", "value": "CVE-2019-12418"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-26T18:22:36Z", "updatedAt": "2019-12-26T18:22:36Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12418"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "7.0.99"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.tomcat.embed:tomcat-embed-core"}, "severity": "MODERATE", "updatedAt": "2019-12-26T18:22:11Z", "vulnerableVersionRange": "< 7.0.98"}, {"firstPatchedVersion": {"identifier": "8.5.49"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.tomcat.embed:tomcat-embed-core"}, "severity": "MODERATE", "updatedAt": "2019-12-26T18:22:11Z", "vulnerableVersionRange": ">= 8.0.0, < 8.5.48"}, {"firstPatchedVersion": {"identifier": "9.0.29"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.tomcat.embed:tomcat-embed-core"}, "severity": "MODERATE", "updatedAt": "2019-12-26T18:22:11Z", "vulnerableVersionRange": ">= 9.0.0, < 9.0.29"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXc0NTctNnE2eC1jZ3A5", "ghsaId": "GHSA-w457-6q6x-cgp9", "summary": "High severity vulnerability that affects handlebars", "description": "Versions of handlebars prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object's __proto__ and __defineGetter__ properties, which may allow an attacker to execute arbitrary code through crafted payloads.", "identifiers": [{"type": "GHSA", "value": "GHSA-w457-6q6x-cgp9"}, {"type": "CVE", "value": "CVE-2019-19919"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-26T17:58:13Z", "updatedAt": "2019-12-26T17:58:13Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19919"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.3.0"}, "package": {"ecosystem": "NPM", "name": "handlebars"}, "severity": "HIGH", "updatedAt": "2019-12-26T17:55:41Z", "vulnerableVersionRange": "< 4.3.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW01ZmYtM3dqMy04cGg0", "ghsaId": "GHSA-m5ff-3wj3-8ph4", "summary": "High severity vulnerability that affects waitress", "description": "### Impact\r\n\r\nIf a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.\r\n\r\n```\r\nContent-Length: 10\r\nTransfer-Encoding: [\\x0b]chunked\r\n```\r\n\r\nFor clarity:\r\n\r\n```\r\n0x0b == vertical tab\r\n```\r\n\r\nWould get parsed by Waitress as being a `chunked` request, but a front-end server would use the `Content-Length` instead as the `Transfer-Encoding` header is considered invalid due to containing invalid characters.\r\n\r\nIf a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.\r\n\r\n### Patches\r\n\r\nPlease upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.\r\n\r\nWaitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.\r\n\r\n### Workarounds\r\n\r\nYou may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.\r\n\r\nWaitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.\r\n\r\n### References\r\n\r\nThis was mentioned in https://portswigger.net/research/http-desync-attacks-what-happened-next and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: https://nathandavison.com/blog/haproxy-http-request-smuggling\r\n\r\n### Thanks\r\n\r\nThe Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\r\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)", "identifiers": [{"type": "GHSA", "value": "GHSA-m5ff-3wj3-8ph4"}, {"type": "CVE", "value": "CVE-2019-16789"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-26T16:34:38Z", "updatedAt": "2019-12-26T16:34:38Z", "references": [{"url": "https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16789"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.1"}, "package": {"ecosystem": "PIP", "name": "waitress"}, "severity": "HIGH", "updatedAt": "2019-12-26T16:34:08Z", "vulnerableVersionRange": "< 1.4.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTRwcHAtZ3Bjci03cWY2", "ghsaId": "GHSA-4ppp-gpcr-7qf6", "summary": "Critical severity vulnerability that affects waitress", "description": "### Impact\n\nWaitress would header fold a double `Content-Length` header and due to being unable to cast the now comma separated value to an integer would set the `Content-Length` to 0 internally.\n\nSo a request with:\n\n```\nContent-Length: 10\nContent-Length: 10\n```\n\nwould get transformed to:\n\n```\nContent-Length: 10, 10\n```\n\nWhich would Waitress would then internally set to `Content-Lenght: 0`.\n\nWaitress would then treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)", "identifiers": [{"type": "GHSA", "value": "GHSA-4ppp-gpcr-7qf6"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-20T23:04:35Z", "updatedAt": "2019-12-20T23:04:35Z", "references": [{"url": "https://github.com/Pylons/waitress/security/advisories/GHSA-4ppp-gpcr-7qf6"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.0"}, "package": {"ecosystem": "PIP", "name": "waitress"}, "severity": "CRITICAL", "updatedAt": "2019-12-20T23:02:04Z", "vulnerableVersionRange": "< 1.3.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWcyeGMtMzVqdy1jNjNw", "ghsaId": "GHSA-g2xc-35jw-c63p", "summary": "Critical severity vulnerability that affects waitress", "description": "### Impact\n\nWaitress would parse the `Transfer-Encoding` header and only look for a single string value, if that value was not `chunked` it would fall through and use the `Content-Length` header instead.\n\nAccording to the HTTP standard `Transfer-Encoding` should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with `chunked`.\n\nRequests sent with:\n\n```\nTransfer-Encoding: gzip, chunked\n```\n\nWould incorrectly get ignored, and the request would use a `Content-Length` header instead to determine the body size of the HTTP message.\n\nThis could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress will now return a 501 Not Implemented error if the `Transfer-Encoding` is not `chunked` or contains multiple elements. Waitress does not support any transfer codings such as `gzip` or `deflate`.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)", "identifiers": [{"type": "GHSA", "value": "GHSA-g2xc-35jw-c63p"}, {"type": "CVE", "value": "CVE-2019-16786"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-20T23:04:18Z", "updatedAt": "2019-12-20T23:04:19Z", "references": [{"url": "https://github.com/Pylons/waitress/security/advisories/GHSA-g2xc-35jw-c63p"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16786"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.0"}, "package": {"ecosystem": "PIP", "name": "waitress"}, "severity": "CRITICAL", "updatedAt": "2019-12-20T23:01:55Z", "vulnerableVersionRange": "<= 1.3.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXBnMzYtd3BtNS1nNTdw", "ghsaId": "GHSA-pg36-wpm5-g57p", "summary": "Critical severity vulnerability that affects waitress", "description": "### Impact\n\nWaitress implemented a \"MAY\" part of the RFC7230 (https://tools.ietf.org/html/rfc7230#section-3.5) which states:\n\n      Although the line terminator for the start-line and header fields is\n      the sequence CRLF, a recipient MAY recognize a single LF as a line\n      terminator and ignore any preceding CR.\n\nUnfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.\n\nExample:\n\n```\nContent-Length: 100[CRLF]\nX-Header: x[LF]Content-Length: 0[CRLF]\n```\n\nWould get treated by Waitress as if it were:\n\n```\nContent-Length: 100\nX-Header: x\nContent-Length: 0\n```\n\nThis could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.\n\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)", "identifiers": [{"type": "GHSA", "value": "GHSA-pg36-wpm5-g57p"}, {"type": "CVE", "value": "CVE-2019-16785"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-20T23:03:57Z", "updatedAt": "2019-12-20T23:03:57Z", "references": [{"url": "https://github.com/Pylons/waitress/security/advisories/GHSA-pg36-wpm5-g57p"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16785"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.0"}, "package": {"ecosystem": "PIP", "name": "waitress"}, "severity": "CRITICAL", "updatedAt": "2019-12-20T23:01:47Z", "vulnerableVersionRange": "<= 1.3.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTd4eHYtd3B4ai1teDV2", "ghsaId": "GHSA-7xxv-wpxj-mx5v", "summary": "Moderate severity vulnerability that affects typed-ast", "description": "typed_ast 1.3.0 and 1.3.1 has an ast_for_arguments out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.)", "identifiers": [{"type": "GHSA", "value": "GHSA-7xxv-wpxj-mx5v"}, {"type": "CVE", "value": "CVE-2019-19275"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:03:09Z", "updatedAt": "2019-12-20T02:10:20Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19275"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.0"}, "package": {"ecosystem": "PIP", "name": "typed-ast"}, "severity": "MODERATE", "updatedAt": "2019-11-27T02:25:59Z", "vulnerableVersionRange": ">= 1.3.0, <= 1.3.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJodzItNjJjcC1wOXA3", "ghsaId": "GHSA-2hw2-62cp-p9p7", "summary": "Moderate severity vulnerability that affects org.apache.zookeeper:zookeeper", "description": "An issue is present in Apache ZooKeeper 1.0.0 to 3.4.13 and 3.5.0-alpha to 3.5.4-beta. ZooKeeper?s getACL() command doesn?t check any permission when retrieves the ACLs of the requested node and returns all information contained in the ACL Id field as plaintext string. DigestAuthenticationProvider overloads the Id field with the hash value that is used for user authentication. As a consequence, if Digest Authentication is in use, the unsalted hash value will be disclosed by getACL() request for unauthenticated or unprivileged users.", "identifiers": [{"type": "GHSA", "value": "GHSA-2hw2-62cp-p9p7"}, {"type": "CVE", "value": "CVE-2019-0201"}], "origin": "UNSPECIFIED", "publishedAt": "2019-05-29T18:54:11Z", "updatedAt": "2019-12-20T02:06:14Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-0201"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.4.14"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.zookeeper:zookeeper"}, "severity": "MODERATE", "updatedAt": "2019-05-29T18:53:57Z", "vulnerableVersionRange": ">= 1.0.0, < 3.4.14"}, {"firstPatchedVersion": {"identifier": "3.5.5"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.zookeeper:zookeeper"}, "severity": "MODERATE", "updatedAt": "2019-05-29T18:53:57Z", "vulnerableVersionRange": ">= 3.5.0, < 3.5.5"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW0zanctNjJtNy1qamNt", "ghsaId": "GHSA-m3jw-62m7-jjcm", "summary": "Low severity vulnerability that affects typed-ast", "description": "typed_ast 1.3.0 and 1.3.1 has a handle_keywordonly_args out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.)", "identifiers": [{"type": "GHSA", "value": "GHSA-m3jw-62m7-jjcm"}, {"type": "CVE", "value": "CVE-2019-19274"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:02:02Z", "updatedAt": "2019-12-20T02:03:19Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19274"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.4.0"}, "package": {"ecosystem": "PIP", "name": "typed-ast"}, "severity": "LOW", "updatedAt": "2019-11-27T02:13:09Z", "vulnerableVersionRange": ">= 1.3.0, <= 1.3.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWhycXItaHhwcC1jaHIz", "ghsaId": "GHSA-hrqr-hxpp-chr3", "summary": "Low severity vulnerability that affects rack", "description": "There's a possible information leak / session hijack vulnerability in Rack. Attackers may be able to find and hijack sessions by using timing attacks targeting the session id. Session ids are usually stored and indexed in a database that uses some kind of scheme for speeding up lookups of that session id. By carefully measuring the amount of time it takes to look up a session, an attacker may be able to find a valid session id and hijack the session.\n\nThe session id itself may be generated randomly, but the way the session is indexed by the backing store does not use a secure comparison.\n\n### Impact\n\nThe session id stored in a cookie is the same id that is used when querying the backing session storage engine.  Most storage mechanisms (for example a database) use some sort of indexing in order to speed up the lookup of that id.  By carefully timing requests and session lookup failures, an attacker may be able to perform a timing attack to determine an existing session id and hijack that session.\n\n## Releases\n\nThe 1.6.12 and 2.0.8 releases are available at the normal locations.\n\n### Workarounds\n\nThere are no known workarounds.\n\n### Patches\n\nTo aid users who aren't able to upgrade immediately we have provided patches for\nthe two supported release series. They are in git-am format and consist of a\nsingle changeset.\n\n* 1-6-session-timing-attack.patch - Patch for 1.6 series\n* 2-0-session-timing-attack.patch - Patch for 2.6 series\n\n### Credits\n\nThanks Will Leinweber for reporting this!", "identifiers": [{"type": "GHSA", "value": "GHSA-hrqr-hxpp-chr3"}, {"type": "CVE", "value": "CVE-2019-16782"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-18T19:01:31Z", "updatedAt": "2019-12-18T19:01:31Z", "references": [{"url": "https://github.com/rack/rack/security/advisories/GHSA-hrqr-hxpp-chr3"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16782"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.6.12"}, "package": {"ecosystem": "RUBYGEMS", "name": "rack"}, "severity": "LOW", "updatedAt": "2019-12-18T19:01:10Z", "vulnerableVersionRange": "< 1.6.12"}, {"firstPatchedVersion": {"identifier": "2.0.8"}, "package": {"ecosystem": "RUBYGEMS", "name": "rack"}, "severity": "LOW", "updatedAt": "2019-12-18T19:01:10Z", "vulnerableVersionRange": ">= 2.0.0, < 2.0.8"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWpjNDMtcXJycC05OGY1", "ghsaId": "GHSA-jc43-qrrp-98f5", "summary": "Moderate severity vulnerability that affects contao/core-bundle", "description": "### Impact\n\nIt is possible to inject insert tags into the login module which will be replaced when the page is rendered.\n\n### Patches\n\nUpdate to Contao 4.8.6.\n\n### Workarounds\n\nNone.\n\n### References\n\nhttps://contao.org/en/security-advisories/insert-tag-injection-in-the-login-module.html\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [contao/contao](https://github.com/contao/contao/issues/new/choose).", "identifiers": [{"type": "GHSA", "value": "GHSA-jc43-qrrp-98f5"}, {"type": "CVE", "value": "CVE-2019-19714"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-17T22:53:40Z", "updatedAt": "2019-12-17T22:53:40Z", "references": [{"url": "https://github.com/contao/contao/security/advisories/GHSA-jc43-qrrp-98f5"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19714"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.8.6"}, "package": {"ecosystem": "COMPOSER", "name": "contao/core-bundle"}, "severity": "MODERATE", "updatedAt": "2019-12-17T19:35:31Z", "vulnerableVersionRange": ">= 4.8.4, < 4.8.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTRtdmMtcWM1dy12NXFy", "ghsaId": "GHSA-4mvc-qc5w-v5qr", "summary": "Moderate severity vulnerability that affects contao/core-bundle", "description": "### Impact\n\nBack end users can manipulate the details view URL to show pages and articles that have not been enabled for them.\n\n### Patches\n\nUpdate to Contao 4.4.46 or 4.8.6.\n\n### Workarounds\n\nNone.\n\n### References\n\nhttps://contao.org/en/security-advisories/information-disclosure-in-the-back-end.html\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [contao/contao](https://github.com/contao/contao/issues/new/choose).", "identifiers": [{"type": "GHSA", "value": "GHSA-4mvc-qc5w-v5qr"}, {"type": "CVE", "value": "CVE-2019-19712"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-17T22:53:34Z", "updatedAt": "2019-12-17T22:53:34Z", "references": [{"url": "https://github.com/contao/contao/security/advisories/GHSA-4mvc-qc5w-v5qr"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19712"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.4.46"}, "package": {"ecosystem": "COMPOSER", "name": "contao/core-bundle"}, "severity": "MODERATE", "updatedAt": "2019-12-17T19:35:55Z", "vulnerableVersionRange": ">= 4.0.0, < 4.4.46"}, {"firstPatchedVersion": {"identifier": "4.8.6"}, "package": {"ecosystem": "COMPOSER", "name": "contao/core-bundle"}, "severity": "MODERATE", "updatedAt": "2019-12-17T19:35:55Z", "vulnerableVersionRange": ">= 4.5.0, < 4.8.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXdqeDgtY2dybS1oaDhw", "ghsaId": "GHSA-wjx8-cgrm-hh8p", "summary": "High severity vulnerability that affects contao/core-bundle", "description": "### Impact\n\nA back end user with access to the form generator can upload arbitrary files and execute them on the server.\n\n### Patches\n\nUpdate to Contao 4.4.46 or 4.8.6.\n\n### Workarounds\n\nConfigure your web server so it does not execute PHP files and other scripts in the Contao file upload directory.\n\n### References\n\nhttps://contao.org/en/security-advisories/unrestricted-file-uploads.html\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [contao/contao](https://github.com/contao/contao/issues/new/choose).", "identifiers": [{"type": "GHSA", "value": "GHSA-wjx8-cgrm-hh8p"}, {"type": "CVE", "value": "CVE-2019-19745"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-17T22:53:10Z", "updatedAt": "2019-12-17T22:53:10Z", "references": [{"url": "https://github.com/contao/contao/security/advisories/GHSA-wjx8-cgrm-hh8p"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19745"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.4.46"}, "package": {"ecosystem": "COMPOSER", "name": "contao/core-bundle"}, "severity": "HIGH", "updatedAt": "2019-12-17T19:42:32Z", "vulnerableVersionRange": ">= 4.0.0, < 4.4.46"}, {"firstPatchedVersion": {"identifier": "4.8.6"}, "package": {"ecosystem": "COMPOSER", "name": "contao/core-bundle"}, "severity": "HIGH", "updatedAt": "2019-12-17T19:42:32Z", "vulnerableVersionRange": ">= 4.5.0, < 4.8.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTNjNDUtd2dqcC03djly", "ghsaId": "GHSA-3c45-wgjp-7v9r", "summary": "Moderate severity vulnerability that affects twisted", "description": "Python Twisted 14.0 trustRoot is not respected in HTTP client", "identifiers": [{"type": "GHSA", "value": "GHSA-3c45-wgjp-7v9r"}, {"type": "CVE", "value": "CVE-2014-7143"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-17T22:52:34Z", "updatedAt": "2019-12-17T22:52:34Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2014-7143"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "14.0.1"}, "package": {"ecosystem": "PIP", "name": "twisted"}, "severity": "MODERATE", "updatedAt": "2019-12-17T01:47:22Z", "vulnerableVersionRange": "= 14.0.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTg0NHctajg2ci00eDJq", "ghsaId": "GHSA-844w-j86r-4x2j", "summary": "Low severity vulnerability that affects tensorflow, tensorflow-cpu, and tensorflow-gpu", "description": "### Impact\n\nA heap buffer overflow in `UnsortedSegmentSum` can be produced when the `Index` template argument is `int32`. In this case `data_size` and `num_segments` fields are truncated from `int64` to `int32` and can produce negative numbers, resulting in accessing out of bounds heap memory.\n\nThis is unlikely to be exploitable and was detected and fixed internally. We are making the security advisory only to notify users that it is better to update to TensorFlow 1.15 or 2.0 or later as these versions already have this fixed.\n\n### Patches\n\nPatched by db4f9717c41bccc3ce10099ab61996b246099892 and released in all official releases after 1.15 and 2.0.\n\n### For more information\nPlease consult [`SECURITY.md`](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.", "identifiers": [{"type": "GHSA", "value": "GHSA-844w-j86r-4x2j"}, {"type": "CVE", "value": "CVE-2019-16778"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-16T20:17:10Z", "updatedAt": "2019-12-16T20:17:10Z", "references": [{"url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-844w-j86r-4x2j"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16778"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.15"}, "package": {"ecosystem": "PIP", "name": "tensorflow"}, "severity": "LOW", "updatedAt": "2019-12-16T20:16:15Z", "vulnerableVersionRange": "< 1.15"}, {"firstPatchedVersion": {"identifier": "1.15"}, "package": {"ecosystem": "PIP", "name": "tensorflow-cpu"}, "severity": "LOW", "updatedAt": "2019-12-16T20:16:15Z", "vulnerableVersionRange": "< 1.15"}, {"firstPatchedVersion": {"identifier": "1.15"}, "package": {"ecosystem": "PIP", "name": "tensorflow-gpu"}, "severity": "LOW", "updatedAt": "2019-12-16T20:16:15Z", "vulnerableVersionRange": "< 1.15"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXE1OGctNDU1cC04dnc5", "ghsaId": "GHSA-q58g-455p-8vw9", "summary": "Low severity vulnerability that affects excon", "description": "### Impact\nThere was a race condition around persistent connections, where a connection which is interrupted (such as by a timeout) would leave data on the socket. Subsequent requests would then read this data, returning content from the previous response. The race condition window appears to be short, and it would be difficult to purposefully exploit this.\n\n### Patches\nThe problem has been patched in 0.71.0, users should upgrade to this or a newer version (if one exists).\n\n### Workarounds\nUsers can workaround the problem by disabling persistent connections, though this may cause performance implications.\n\n### References\nSee the [patch](https://github.com/excon/excon/commit/ccb57d7a422f020dc74f1de4e8fb505ab46d8a29) for further details.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [excon/issues](https://github.com/excon/excon/issues)\n* Email us at [geemus+github@gmail.com](mailto:geemus+github@gmail.com)", "identifiers": [{"type": "GHSA", "value": "GHSA-q58g-455p-8vw9"}, {"type": "CVE", "value": "CVE-2019-16779"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-16T19:30:17Z", "updatedAt": "2019-12-16T19:30:17Z", "references": [{"url": "https://github.com/excon/excon/security/advisories/GHSA-q58g-455p-8vw9"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16779"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.71.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "excon"}, "severity": "LOW", "updatedAt": "2019-12-16T19:28:11Z", "vulnerableVersionRange": "< 0.71.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWhtNnEtcjJqYy1jcHFo", "ghsaId": "GHSA-hm6q-r2jc-cpqh", "summary": "Critical severity vulnerability that affects lodahs", "description": "The lodahs package 0.0.1 for Node.js is a Trojan horse, and may have been installed by persons who mistyped the lodash package name. In particular, the Trojan horse finds and exfiltrates cryptocurrency wallets.", "identifiers": [{"type": "GHSA", "value": "GHSA-hm6q-r2jc-cpqh"}, {"type": "CVE", "value": "CVE-2019-19771"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-16T19:29:33Z", "updatedAt": "2019-12-16T19:29:33Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19771"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": null, "package": {"ecosystem": "NPM", "name": "lodahs"}, "severity": "CRITICAL", "updatedAt": "2019-12-15T14:26:07Z", "vulnerableVersionRange": ">= 0.0.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTQzMjgtOGhnZi03d2py", "ghsaId": "GHSA-4328-8hgf-7wjr", "summary": "Low severity vulnerability that affects npm", "description": "## Arbitrary File Overwrite\r\n\r\nVersions of  the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a `serve` binary, any subsequent installs of packages that also create a `serve` binary would overwrite the previous `serve` binary.  \r\n\r\nThis behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.  \r\n\r\nThank you to Daniel Ruf for reporting the issue!\r\n\r\nFurther information: [npm blog post](https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli)\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-4328-8hgf-7wjr"}, {"type": "CVE", "value": "CVE-2019-16777"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-13T15:39:32Z", "updatedAt": "2019-12-13T15:41:20Z", "references": [{"url": "https://github.com/npm/cli/security/advisories/GHSA-4328-8hgf-7wjr"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16777"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.13.4"}, "package": {"ecosystem": "NPM", "name": "npm"}, "severity": "LOW", "updatedAt": "2019-12-13T15:38:56Z", "vulnerableVersionRange": "< 6.13.4"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXg4cWMtcnJjdy00cjQ2", "ghsaId": "GHSA-x8qc-rrcw-4r46", "summary": "Low severity vulnerability that affects npm", "description": "## Arbitrary File Write\r\n\r\nVersions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended `node_modules` folder through the `bin` field. A properly constructed entry in the package.json `bin` field would allow a package publisher to modify and/or gain access to arbitrary files on a user\u2019s system when the package is installed.\r\n\r\nThis behavior is possible through install scripts. This vulnerability bypasses a user using the `--ignore-scripts` install option.\r\n\r\nThank you Daniel Ruf for reporting the issue!\r\n\r\nFurther information: [npm blog post](https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli)\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-x8qc-rrcw-4r46"}, {"type": "CVE", "value": "CVE-2019-16776"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-13T15:39:26Z", "updatedAt": "2019-12-13T15:41:06Z", "references": [{"url": "https://github.com/npm/cli/security/advisories/GHSA-x8qc-rrcw-4r46"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16776"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.13.3"}, "package": {"ecosystem": "NPM", "name": "npm"}, "severity": "LOW", "updatedAt": "2019-12-13T15:38:09Z", "vulnerableVersionRange": "< 6.13.3"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW02Y3gtZzZxbS1wMmN4", "ghsaId": "GHSA-m6cx-g6qm-p2cx", "summary": "Low severity vulnerability that affects npm", "description": "## Unauthorized File Access\r\n\r\nVersions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of the`node_modules` folder through the `bin` field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user\u2019s system when the package is installed.  \r\n\r\nThis behavior is possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\r\n\r\nThank you Daniel Ruf for responsibly reporting the issue!\r\n\r\nFurther information: [npm blog post](https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli)\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-m6cx-g6qm-p2cx"}, {"type": "CVE", "value": "CVE-2019-16775"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-13T15:39:19Z", "updatedAt": "2019-12-13T15:40:49Z", "references": [{"url": "https://github.com/npm/cli/security/advisories/GHSA-m6cx-g6qm-p2cx"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16775"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "< 6.13.3"}, "package": {"ecosystem": "NPM", "name": "npm"}, "severity": "LOW", "updatedAt": "2019-12-13T15:37:58Z", "vulnerableVersionRange": "< 6.13.3"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTQ4NGYtNzQzZi02angy", "ghsaId": "GHSA-484f-743f-6jx2", "summary": "High severity vulnerability that affects phpfastcache/phpfastcache", "description": "## Object injection in cookie driver\r\n\r\n### Impact\r\nAn possible object injection has been discovered in cookie driver prior 5.0.13 versions (of 5.x releases).\r\n\r\n### Patches\r\nThe issue has been addressed by enforcing JSON conversion when deserializing\r\n\r\n### Workarounds\r\nIf you can't fix it, use another driver such as \"Files\" (Filesystem)\r\n\r\n### References\r\nFixing release: https://github.com/PHPSocialNetwork/phpfastcache/releases/tag/5.0.13\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [the issue tracker](https://github.com/PHPSocialNetwork/phpfastcache/issues)\r\n* Email us at [security@geolim4.com](mailto:security@geolim4.com)\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-484f-743f-6jx2"}, {"type": "CVE", "value": "CVE-2019-16774"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-12T22:50:20Z", "updatedAt": "2019-12-12T22:50:20Z", "references": [{"url": "https://github.com/PHPSocialNetwork/phpfastcache/security/advisories/GHSA-484f-743f-6jx2"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16774"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "5.0.13"}, "package": {"ecosystem": "COMPOSER", "name": "phpfastcache/phpfastcache"}, "severity": "HIGH", "updatedAt": "2019-12-12T22:49:57Z", "vulnerableVersionRange": ">= 5.0.0, < 5.0.13"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXY2M3gteGM5ai1oaHZx", "ghsaId": "GHSA-v63x-xc9j-hhvq", "summary": "Critical severity vulnerability that affects safer-eval", "description": "## Remote Code Execution Vulnerability due to Sandbox Bypass\r\n\r\n### Impact\r\n\r\n- Remote Code Execution\r\n- Cross Site Scripting\r\n\r\n### Patches\r\n\r\nThere will be no patch available.\r\n\r\n### Workarounds\r\n\r\nPlease use other packages like [vm2](https://www.npmjs.com/package/vm2).\r\n\r\n### References\r\n\r\nThe issue was originally reported to the project [vm2](https://github.com/patriksimek/vm2) by @XmiliaH in an issue [here](https://github.com/patriksimek/vm2/issues/197).\r\n\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-v63x-xc9j-hhvq"}, {"type": "CVE", "value": "CVE-2019-10769"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-11T02:01:44Z", "updatedAt": "2019-12-11T02:01:44Z", "references": [{"url": "https://github.com/commenthol/safer-eval/security/advisories/GHSA-v63x-xc9j-hhvq"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10769"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": null, "package": {"ecosystem": "NPM", "name": "safer-eval"}, "severity": "CRITICAL", "updatedAt": "2019-12-11T02:01:29Z", "vulnerableVersionRange": "<= 1.3.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWh2bWYtcjkyci0yN2hy", "ghsaId": "GHSA-hvmf-r92r-27hr", "summary": "Moderate severity vulnerability that affects django", "description": "Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)", "identifiers": [{"type": "GHSA", "value": "GHSA-hvmf-r92r-27hr"}, {"type": "CVE", "value": "CVE-2019-19118"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-04T21:26:28Z", "updatedAt": "2019-12-10T19:37:39Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19118"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.1.15"}, "package": {"ecosystem": "PIP", "name": "django"}, "severity": "MODERATE", "updatedAt": "2019-12-10T19:37:39Z", "vulnerableVersionRange": ">= 2.1.0, < 2.1.15"}, {"firstPatchedVersion": {"identifier": "2.2.8"}, "package": {"ecosystem": "PIP", "name": "django"}, "severity": "MODERATE", "updatedAt": "2019-12-04T19:44:29Z", "vulnerableVersionRange": ">= 2.2.0, < 2.2.8"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWNtY2gtMjk2ai13ZnZ3", "ghsaId": "GHSA-cmch-296j-wfvw", "summary": "Moderate severity vulnerability that affects iobroker.js-controller", "description": "An attacker can include file contents from outside the `/adapter/xxx/` directory, where `xxx` is the name of an existent adapter like \"admin\". It is exploited using the administrative web panel with a request for an adapter file. **Note:** The attacker has to be logged in if the authentication is enabled (by default isn't enabled).", "identifiers": [{"type": "GHSA", "value": "GHSA-cmch-296j-wfvw"}, {"type": "CVE", "value": "CVE-2019-10767"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:06:14Z", "updatedAt": "2019-12-10T18:35:14Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10767"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.0.25"}, "package": {"ecosystem": "NPM", "name": "iobroker.js-controller"}, "severity": "MODERATE", "updatedAt": "2019-11-27T03:26:57Z", "vulnerableVersionRange": "< 2.0.25"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTg5bXEtNHg0Ny01djgz", "ghsaId": "GHSA-89mq-4x47-5v83", "summary": "Moderate severity vulnerability that affects angular", "description": "In AngularJS before 1.7.9 the function `merge()` could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.", "identifiers": [{"type": "GHSA", "value": "GHSA-89mq-4x47-5v83"}, {"type": "CVE", "value": "CVE-2019-10768"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T15:29:43Z", "updatedAt": "2019-12-10T18:33:44Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10768"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.7.9"}, "package": {"ecosystem": "NPM", "name": "angular"}, "severity": "MODERATE", "updatedAt": "2019-11-20T00:51:07Z", "vulnerableVersionRange": "< 1.7.9"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTNmanEtOTN4ai0zZjNm", "ghsaId": "GHSA-3fjq-93xj-3f3f", "summary": "Moderate severity vulnerability that affects serialize-to-js", "description": "## regular expressions Cross-Site Scripting (XSS) vulnerability \r\n\r\n## Impact\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). It does not properly mitigate against unsafe characters in serialized regular expressions.\r\n\r\nThis vulnerability is not affected on Node.js environment since Node.js's implementation of RegExp.prototype.toString() backslash-escapes all forward slashes in regular expressions.\r\n\r\nIf serialized data of regular expression objects are used in an environment other than Node.js, it is affected by this vulnerability.\r\n\r\n## Patches\r\n\r\nThis was patched in v3.0.1.\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-3fjq-93xj-3f3f"}, {"type": "CVE", "value": "CVE-2019-16772"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-06T23:20:26Z", "updatedAt": "2019-12-06T23:21:07Z", "references": [{"url": "https://github.com/commenthol/serialize-to-js/security/advisories/GHSA-3fjq-93xj-3f3f"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16772"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.0.1"}, "package": {"ecosystem": "NPM", "name": "serialize-to-js"}, "severity": "MODERATE", "updatedAt": "2019-12-06T23:20:14Z", "vulnerableVersionRange": "< 3.0.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTM1ZnItaDdqci1oaDg2", "ghsaId": "GHSA-35fr-h7jr-hh86", "summary": "Moderate severity vulnerability that affects com.linecorp.armeria:armeria", "description": "## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\r\n\r\nVersions of Armeria 0.85.0 through and including 0.96.0 are vulnerable to HTTP response splitting, which allows remote attackers to inject arbitrary HTTP headers via CRLF sequences when unsanitized data is used to populate the headers of an HTTP response.\r\n\r\n### Impact\r\n\r\n1. Cross-User Defacement\r\n2. Cache Poisoning\r\n3. Cross-Site Scripting (XSS)\r\n4. Page Hijacking\r\n\r\n\r\n### Root Cause\r\n\r\nThe root cause is due to the usage of Netty without the HTTP header validation.\r\n\r\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/common/DefaultHttpHeaders.java#L23\r\n\r\n### Patches\r\n\r\nThis vulnerability has been patched in 0.97.0.\r\n\r\n### References\r\n\r\n[CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https://cwe.mitre.org/data/definitions/113.html)\r\nhttps://github.com/ratpack/ratpack/security/advisories/GHSA-mvqp-q37c-wf9j\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [GitHub](https://github.com/line/armeria/issues)\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-35fr-h7jr-hh86"}, {"type": "CVE", "value": "CVE-2019-16771"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-06T18:55:47Z", "updatedAt": "2019-12-06T18:55:47Z", "references": [{"url": "https://github.com/line/armeria/security/advisories/GHSA-35fr-h7jr-hh86"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16771"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.97.0"}, "package": {"ecosystem": "MAVEN", "name": "com.linecorp.armeria:armeria"}, "severity": "MODERATE", "updatedAt": "2019-12-06T18:55:39Z", "vulnerableVersionRange": ">= 0.85.0, < 0.97.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTI0cjgtZm05ci1jcGoy", "ghsaId": "GHSA-24r8-fm9r-cpj2", "summary": "Low severity vulnerability that affects com.linecorp.armeria:armeria", "description": "## Multiple timing attack vulnerabilities leading to the recovery of secrets based on the use of non-constant time compare function\r\n\r\n### Impact\r\n\r\nString comparison method in multiple authentication validation in Armeria were known to be vulnerable to timing attacks. This vulnerability is caused by the insecure implementation of `equals` method from `java.lang.String`. While this attack is not practically possible, an attacker still has a potential to attack if the victim's server validates user by using `equals` method.\r\n\r\nWe would like to thank @chrsow for pointing out the issue.\r\n\r\n## Potentially vulnerable codes\r\n\r\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/server/auth/OAuth2Token.java#L54\r\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/server/auth/BasicToken.java#L64\r\n\r\n### Patches\r\n\r\nThere are two options to patch this issue.\r\n\r\n1. Remove `equals` method; it has been exclusively used for test cases and was never used in any OSS projects that are using Armeria. (But it is worth noting that there are possibilities of closed projects authenticating users by utilizing `equals` method)\r\n\r\n2. Use `MessageDigest.isEqual` to compare the credential instead.\r\n\r\n### Workarounds\r\n\r\n1. Update to the latest version (TBD)\r\n\r\n2-1. Users can prevent these vulnerabilities by modifying and implementing timing attack preventions by themselves.\r\n\r\n2-2. Precisely speaking, it is possible to compare credentials by securely comparing them after calling methods to directly return the input (namely `Object. accessToken()`, `Object.username()` and `Object.password()`).\r\n\r\n### References\r\n- https://cwe.mitre.org/data/definitions/208.html\r\n- https://security.stackexchange.com/questions/111040/should-i-worry-about-remote-timing-attacks-on-string-comparison\r\n\r\n### Side Note\r\n\r\nSince it is a theoretical attack, there is no PoC available from neither the vendor nor the security team.\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-24r8-fm9r-cpj2"}, {"type": "CVE", "value": "CVE-2019-16771"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-05T18:40:51Z", "updatedAt": "2019-12-06T18:54:03Z", "references": [{"url": "https://github.com/line/armeria/security/advisories/GHSA-24r8-fm9r-cpj2"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16771"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.97.0"}, "package": {"ecosystem": "MAVEN", "name": "com.linecorp.armeria:armeria"}, "severity": "LOW", "updatedAt": "2019-12-05T18:40:31Z", "vulnerableVersionRange": "< 0.97.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTNyOGotcG1jaC01ajJo", "ghsaId": "GHSA-3r8j-pmch-5j2h", "summary": "Low severity vulnerability that affects sylius/sylius", "description": "## Internal exception message exposure for login action\r\n\r\n### Impact\r\nException messages from internal exceptions (like database exception) are wrapped by `\\Symfony\\Component\\Security\\Core\\Exception\\AuthenticationServiceException` and propagated through the system to UI. Therefore, some internal system information may leak and be visible to the customer. \r\n\r\nA validation message with the exception details will be presented to the user when one will try to log into the shop. \r\n\r\n### Patches\r\n_Has the problem been patched? What versions should users upgrade to?_\r\n\r\n### Workarounds\r\nThe `src/Sylius/Bundle/UiBundle/Resources/views/Security/_login.html.twig` file should be overridden and lines https://github.com/Sylius/Sylius/blob/1.4/src/Sylius/Bundle/UiBundle/Resources/views/Security/_login.html.twig#L13-L17 should be replaced with\r\n```twig\r\n        {% if last_error %}\r\n            <div class=\"ui left aligned basic segment\">\r\n                {{ messages.error(last_error.messageKey) }}\r\n            </div>\r\n        {% endif %}\r\n``` \r\n\r\nThe `messageKey` field should be used instead of the `message`.\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-3r8j-pmch-5j2h"}, {"type": "CVE", "value": "CVE-2019-16768"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-05T19:57:04Z", "updatedAt": "2019-12-05T19:57:04Z", "references": [{"url": "https://github.com/Sylius/Sylius/security/advisories/GHSA-3r8j-pmch-5j2h"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16768"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.3.14"}, "package": {"ecosystem": "COMPOSER", "name": "sylius/sylius"}, "severity": "LOW", "updatedAt": "2019-12-05T19:56:23Z", "vulnerableVersionRange": "< 1.3.14"}, {"firstPatchedVersion": {"identifier": "1.4.10"}, "package": {"ecosystem": "COMPOSER", "name": "sylius/sylius"}, "severity": "LOW", "updatedAt": "2019-12-05T19:56:23Z", "vulnerableVersionRange": ">= 1.4.0, < 1.4.10"}, {"firstPatchedVersion": {"identifier": "1.5.7"}, "package": {"ecosystem": "COMPOSER", "name": "sylius/sylius"}, "severity": "LOW", "updatedAt": "2019-12-05T19:56:23Z", "vulnerableVersionRange": ">= 1.5.0, < 1.5.7"}, {"firstPatchedVersion": {"identifier": "1.6.3"}, "package": {"ecosystem": "COMPOSER", "name": "sylius/sylius"}, "severity": "LOW", "updatedAt": "2019-12-05T19:56:23Z", "vulnerableVersionRange": ">= 1.6.0, < 1.6.3"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTd4eDMtbTU4NC14OTk0", "ghsaId": "GHSA-7xx3-m584-x994", "summary": "Moderate severity vulnerability that affects puma", "description": "## Keepalive thread overload/DoS\r\n\r\n### Impact\r\n\r\nA poorly-behaved client could use keepalive requests to monopolize Puma's reactor and create a denial of service attack.\r\n\r\nIf more keepalive connections to Puma are opened than there are threads available, additional connections will wait permanently if the attacker sends requests frequently enough.\r\n\r\n### Patches\r\n\r\nThis vulnerability is patched in Puma 4.3.1 and 3.12.2.\r\n\r\n### Workarounds\r\n\r\nReverse proxies in front of Puma could be configured to always allow less than X keepalive connections to a Puma cluster or process, where X is the number of threads configured in Puma's thread pool.\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* Open an issue at [puma](github.com/puma/puma).\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-7xx3-m584-x994"}, {"type": "CVE", "value": "CVE-2019-16770"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-05T19:26:37Z", "updatedAt": "2019-12-05T19:26:37Z", "references": [{"url": "https://github.com/puma/puma/security/advisories/GHSA-7xx3-m584-x994"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16770"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.12.2"}, "package": {"ecosystem": "RUBYGEMS", "name": "puma"}, "severity": "MODERATE", "updatedAt": "2019-12-05T19:25:16Z", "vulnerableVersionRange": "< 3.12.2"}, {"firstPatchedVersion": {"identifier": "4.3.1"}, "package": {"ecosystem": "RUBYGEMS", "name": "puma"}, "severity": "MODERATE", "updatedAt": "2019-12-05T19:25:16Z", "vulnerableVersionRange": ">= 4.0.0, < 4.3.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWg5cnYtam1tZi00cGd4", "ghsaId": "GHSA-h9rv-jmmf-4pgx", "summary": "Moderate severity vulnerability that affects serialize-javascript", "description": "## regular expressions Cross-Site Scripting (XSS) vulnerability\n\n### Impact\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). It does not properly mitigate against unsafe characters in serialized regular expressions.\r\n\r\nThis vulnerability is not affected on Node.js environment since Node.js's implementation of `RegExp.prototype.toString()` backslash-escapes all forward slashes in regular expressions.\r\n\r\nIf serialized data of regular expression objects are used in an environment other than Node.js, it is affected by this vulnerability.\r\n\r\n### Patches\r\n\r\nThis was patched in v2.1.1.\r\n\n", "identifiers": [{"type": "GHSA", "value": "GHSA-h9rv-jmmf-4pgx"}, {"type": "CVE", "value": "CVE-2019-16769"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-05T18:44:37Z", "updatedAt": "2019-12-05T18:44:37Z", "references": [{"url": "https://github.com/yahoo/serialize-javascript/security/advisories/GHSA-h9rv-jmmf-4pgx"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16769"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.1.1"}, "package": {"ecosystem": "NPM", "name": "serialize-javascript"}, "severity": "MODERATE", "updatedAt": "2019-12-05T18:44:25Z", "vulnerableVersionRange": "< 2.1.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWpmODUtY3BjcC1qNjk1", "ghsaId": "GHSA-jf85-cpcp-j695", "summary": "Critical severity vulnerability that affects lodash, lodash-es, lodash-amd, lodash.template, lodash.merge, lodash.mergewith, and lodash.defaultsdeep", "description": "Affected versions of lodash are vulnerable to Prototype Pollution. \nThe function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.", "identifiers": [{"type": "GHSA", "value": "GHSA-jf85-cpcp-j695"}, {"type": "CVE", "value": "CVE-2019-10744"}], "origin": "UNSPECIFIED", "publishedAt": "2019-07-10T19:45:23Z", "updatedAt": "2019-12-05T17:41:55Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10744"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.17.12"}, "package": {"ecosystem": "NPM", "name": "lodash"}, "severity": "CRITICAL", "updatedAt": "2019-12-05T17:37:10Z", "vulnerableVersionRange": "< 4.17.12"}, {"firstPatchedVersion": {"identifier": "4.17.14"}, "package": {"ecosystem": "NPM", "name": "lodash-es"}, "severity": "CRITICAL", "updatedAt": "2019-07-10T19:41:12Z", "vulnerableVersionRange": "< 4.17.14"}, {"firstPatchedVersion": {"identifier": "4.17.13"}, "package": {"ecosystem": "NPM", "name": "lodash-amd"}, "severity": "CRITICAL", "updatedAt": "2019-07-10T19:41:12Z", "vulnerableVersionRange": "< 4.17.13"}, {"firstPatchedVersion": {"identifier": "4.5.0"}, "package": {"ecosystem": "NPM", "name": "lodash.template"}, "severity": "CRITICAL", "updatedAt": "2019-07-10T19:41:12Z", "vulnerableVersionRange": "< 4.5.0"}, {"firstPatchedVersion": {"identifier": "4.6.2"}, "package": {"ecosystem": "NPM", "name": "lodash.merge"}, "severity": "CRITICAL", "updatedAt": "2019-07-10T19:41:12Z", "vulnerableVersionRange": "< 4.6.2"}, {"firstPatchedVersion": {"identifier": "4.6.2"}, "package": {"ecosystem": "NPM", "name": "lodash.mergewith"}, "severity": "CRITICAL", "updatedAt": "2019-07-10T19:41:12Z", "vulnerableVersionRange": "< 4.6.2"}, {"firstPatchedVersion": {"identifier": "4.6.1"}, "package": {"ecosystem": "NPM", "name": "lodash.defaultsdeep"}, "severity": "CRITICAL", "updatedAt": "2019-07-10T19:41:12Z", "vulnerableVersionRange": "< 4.6.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXJoNDYtM2ZnYy1tdnJm", "ghsaId": "GHSA-rh46-3fgc-mvrf", "summary": "Moderate severity vulnerability that affects jpv", "description": "In jpv (aka Json Pattern Validator) before 2.1.1, compareCommon() can be bypassed because certain internal attributes can be overwritten via a conflicting name, as demonstrated by 'constructor': {'name':'Array'}. This affects validate(). Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.", "identifiers": [{"type": "GHSA", "value": "GHSA-rh46-3fgc-mvrf"}, {"type": "CVE", "value": "CVE-2019-19507"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-04T21:25:28Z", "updatedAt": "2019-12-04T21:25:28Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-19507"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.1.1"}, "package": {"ecosystem": "NPM", "name": "jpv"}, "severity": "MODERATE", "updatedAt": "2019-12-04T19:47:27Z", "vulnerableVersionRange": "< 2.1.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTJtcmotNDM1di1jMmNy", "ghsaId": "GHSA-2mrj-435v-c2cr", "summary": "Moderate severity vulnerability that affects ecdsa", "description": "An error-handling flaw was found in python-ecdsa before version 0.13.3. During signature decoding, malformed DER signatures could raise unexpected exceptions (or no exceptions at all), which could lead to a denial of service.", "identifiers": [{"type": "GHSA", "value": "GHSA-2mrj-435v-c2cr"}, {"type": "CVE", "value": "CVE-2019-14853"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:15:31Z", "updatedAt": "2019-12-03T18:54:35Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-14853"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.13.3"}, "package": {"ecosystem": "PIP", "name": "ecdsa"}, "severity": "MODERATE", "updatedAt": "2019-12-02T01:15:53Z", "vulnerableVersionRange": "< 0.13.3"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTc5Z3ItNThyMy1wd20z", "ghsaId": "GHSA-79gr-58r3-pwm3", "summary": "High severity vulnerability that affects symfony/cache and symfony/symfony", "description": "An issue was discovered in Symfony 3.4.0 through 3.4.34, 4.2.0 through 4.2.11, and 4.3.0 through 4.3.7. Serializing certain cache adapter interfaces could result in remote code injection. This is related to symfony/cache.", "identifiers": [{"type": "GHSA", "value": "GHSA-79gr-58r3-pwm3"}, {"type": "CVE", "value": "CVE-2019-18889"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:07:16Z", "updatedAt": "2019-12-03T18:37:01Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18889"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.4.35"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/cache"}, "severity": "HIGH", "updatedAt": "2019-12-01T19:45:09Z", "vulnerableVersionRange": ">= 3.1.0, < 3.4.35"}, {"firstPatchedVersion": {"identifier": "4.2.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/cache"}, "severity": "HIGH", "updatedAt": "2019-12-01T19:45:09Z", "vulnerableVersionRange": ">= 4.0.0, < 4.2.12"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/cache"}, "severity": "HIGH", "updatedAt": "2019-12-01T19:45:09Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}, {"firstPatchedVersion": {"identifier": "3.4.35"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "HIGH", "updatedAt": "2019-12-01T19:45:09Z", "vulnerableVersionRange": ">= 3.1.0, < 3.4.35"}, {"firstPatchedVersion": {"identifier": "4.2.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "HIGH", "updatedAt": "2019-12-01T19:45:09Z", "vulnerableVersionRange": ">= 4.0.0, < 4.2.12"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "HIGH", "updatedAt": "2019-12-01T19:45:09Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWo3bWotNzQ4eC03cDc4", "ghsaId": "GHSA-j7mj-748x-7p78", "summary": "Low severity vulnerability that affects pillow", "description": "An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image.", "identifiers": [{"type": "GHSA", "value": "GHSA-j7mj-748x-7p78"}, {"type": "CVE", "value": "CVE-2019-16865"}], "origin": "UNSPECIFIED", "publishedAt": "2019-10-22T14:40:42Z", "updatedAt": "2019-12-03T18:35:45Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16865"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.2.0"}, "package": {"ecosystem": "PIP", "name": "pillow"}, "severity": "LOW", "updatedAt": "2019-10-17T17:43:24Z", "vulnerableVersionRange": "< 6.2.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTZ4YzItbWozOS1xNTk5", "ghsaId": "GHSA-6xc2-mj39-q599", "summary": "Moderate severity vulnerability that affects strapi", "description": "strapi before 3.0.0-beta.17.5 mishandles password resets within packages/strapi-admin/controllers/Auth.js and packages/strapi-plugin-users-permissions/controllers/Auth.js.", "identifiers": [{"type": "GHSA", "value": "GHSA-6xc2-mj39-q599"}, {"type": "CVE", "value": "CVE-2019-18818"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:20:41Z", "updatedAt": "2019-12-02T18:20:41Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18818"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.0.0-beta.17.5"}, "package": {"ecosystem": "NPM", "name": "strapi"}, "severity": "MODERATE", "updatedAt": "2019-12-02T17:36:26Z", "vulnerableVersionRange": "< 3.0.0-beta.17.5"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWZtcXctdnFoNS1jd3E5", "ghsaId": "GHSA-fmqw-vqh5-cwq9", "summary": "Moderate severity vulnerability that affects org.apache.nifi:nifi", "description": "When using an authentication mechanism other than PKI, when the user clicks Log Out in NiFi versions 1.0.0 to 1.9.2, NiFi invalidates the authentication token on the client side but not on the server side. This permits the user's client-side token to be used for up to 12 hours after logging out to make API requests to NiFi.", "identifiers": [{"type": "GHSA", "value": "GHSA-fmqw-vqh5-cwq9"}, {"type": "CVE", "value": "CVE-2019-12421"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:19:39Z", "updatedAt": "2019-12-02T18:19:39Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12421"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.10.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.nifi:nifi"}, "severity": "MODERATE", "updatedAt": "2019-12-02T17:32:50Z", "vulnerableVersionRange": ">= 1.3.0, < 1.10.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTI2cDgteHJqMi1tdjUz", "ghsaId": "GHSA-26p8-xrj2-mv53", "summary": "Moderate severity vulnerability that affects org.apache.nifi:nifi-web-api and org.apache.nifi:nifi", "description": "When updating a Process Group via the API in NiFi versions 1.3.0 to 1.9.2, the response to the request includes all of its contents (at the top most level, not recursively). The response included details about processors and controller services which the user may not have had read access to.", "identifiers": [{"type": "GHSA", "value": "GHSA-26p8-xrj2-mv53"}, {"type": "CVE", "value": "CVE-2019-10083"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:18:37Z", "updatedAt": "2019-12-02T18:18:37Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10083"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.10.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.nifi:nifi-web-api"}, "severity": "MODERATE", "updatedAt": "2019-12-02T17:30:23Z", "vulnerableVersionRange": ">= 1.3.0, < 1.10.0"}, {"firstPatchedVersion": {"identifier": "1.10.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.nifi:nifi"}, "severity": "MODERATE", "updatedAt": "2019-12-02T17:30:23Z", "vulnerableVersionRange": ">= 1.3.0, < 1.10.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTc0NHItdnYyZy0yeDZn", "ghsaId": "GHSA-744r-vv2g-2x6g", "summary": "Moderate severity vulnerability that affects org.apache.nifi:org.apache.nifi:nifi-security and org.apache.nifi:org.apache.nifi:nifi", "description": "The XMLFileLookupService in NiFi versions 1.3.0 to 1.9.2 allowed trusted users to inadvertently configure a potentially malicious XML file. The XML file has the ability to make external calls to services (via XXE) and reveal information such as the versions of Java, Jersey, and Apache that the NiFI instance uses.", "identifiers": [{"type": "GHSA", "value": "GHSA-744r-vv2g-2x6g"}, {"type": "CVE", "value": "CVE-2019-10080"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:17:36Z", "updatedAt": "2019-12-02T18:17:36Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10080"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.10.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.nifi:org.apache.nifi:nifi-security"}, "severity": "MODERATE", "updatedAt": "2019-12-02T17:27:23Z", "vulnerableVersionRange": ">= 1.3.0, < 1.10.0"}, {"firstPatchedVersion": {"identifier": "1.10.0"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.nifi:org.apache.nifi:nifi"}, "severity": "MODERATE", "updatedAt": "2019-12-02T17:27:23Z", "vulnerableVersionRange": ">= 1.3.0, < 1.10.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTR4NnYtcndoNC01NWp3", "ghsaId": "GHSA-4x6v-rwh4-55jw", "summary": "Moderate severity vulnerability that affects pomelo", "description": "Pomelo v2.2.5 allows external control of critical state data. A malicious user input can corrupt arbitrary methods and attributes in template/game-server/app/servers/connector/handler/entryHandler.js because certain internal attributes can be overwritten via a conflicting name. Hence, a malicious attacker can manipulate internal attributes by adding additional attributes to user input.", "identifiers": [{"type": "GHSA", "value": "GHSA-4x6v-rwh4-55jw"}, {"type": "CVE", "value": "CVE-2019-18954"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:16:34Z", "updatedAt": "2019-12-02T18:16:34Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18954"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.2.7"}, "package": {"ecosystem": "NPM", "name": "pomelo"}, "severity": "MODERATE", "updatedAt": "2019-12-02T01:20:23Z", "vulnerableVersionRange": "< 2.2.7"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTZyamMtNHB3ci0zdnA3", "ghsaId": "GHSA-6rjc-4pwr-3vp7", "summary": "Moderate severity vulnerability that affects iobroker.web", "description": "Characters in the GET url path are not properly escaped and can be reflected in the server response.", "identifiers": [{"type": "GHSA", "value": "GHSA-6rjc-4pwr-3vp7"}, {"type": "CVE", "value": "CVE-2019-10771"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:14:30Z", "updatedAt": "2019-12-02T18:14:30Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10771"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.4.10"}, "package": {"ecosystem": "NPM", "name": "iobroker.web"}, "severity": "MODERATE", "updatedAt": "2019-12-02T01:13:06Z", "vulnerableVersionRange": "< 2.4.10"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTVoOWotcTZqMi0yNTNm", "ghsaId": "GHSA-5h9j-q6j2-253f", "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server", "description": "In Eclipse Jetty versions 9.4.21.v20190926, 9.4.22.v20191022, and 9.4.23.v20191118, the generation of default unhandled Error response content (in text/html and text/json Content-Type) does not escape Exception messages in stacktraces included in error output.", "identifiers": [{"type": "GHSA", "value": "GHSA-5h9j-q6j2-253f"}, {"type": "CVE", "value": "CVE-2019-17632"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:13:28Z", "updatedAt": "2019-12-02T18:13:28Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17632"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "9.4.24.v20191120"}, "package": {"ecosystem": "MAVEN", "name": "org.eclipse.jetty:jetty-server"}, "severity": "MODERATE", "updatedAt": "2019-12-02T01:09:16Z", "vulnerableVersionRange": "= 9.4.21.v20190926"}, {"firstPatchedVersion": {"identifier": "9.4.24.v20191120"}, "package": {"ecosystem": "MAVEN", "name": "org.eclipse.jetty:jetty-server"}, "severity": "MODERATE", "updatedAt": "2019-12-02T01:09:16Z", "vulnerableVersionRange": "= 9.4.22.v20191022"}, {"firstPatchedVersion": {"identifier": "9.4.24.v20191120"}, "package": {"ecosystem": "MAVEN", "name": "org.eclipse.jetty:jetty-server"}, "severity": "MODERATE", "updatedAt": "2019-12-02T01:09:16Z", "vulnerableVersionRange": "= 9.4.23.v20191118"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXFocngtaGNtNi1wbXJ3", "ghsaId": "GHSA-qhrx-hcm6-pmrw", "summary": "Moderate severity vulnerability that affects cakephp/cakephp", "description": "An issue was discovered in SmtpTransport in CakePHP 3.7.6. An unserialized object with modified internal properties can trigger arbitrary file overwriting upon destruction.", "identifiers": [{"type": "GHSA", "value": "GHSA-qhrx-hcm6-pmrw"}, {"type": "CVE", "value": "CVE-2019-11458"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:12:26Z", "updatedAt": "2019-12-02T18:12:26Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-11458"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.5.18"}, "package": {"ecosystem": "COMPOSER", "name": "cakephp/cakephp"}, "severity": "MODERATE", "updatedAt": "2019-12-02T00:51:04Z", "vulnerableVersionRange": ">= 3.0.0, < 3.5.18"}, {"firstPatchedVersion": {"identifier": "3.6.15"}, "package": {"ecosystem": "COMPOSER", "name": "cakephp/cakephp"}, "severity": "MODERATE", "updatedAt": "2019-12-02T00:51:04Z", "vulnerableVersionRange": ">= 3.6.0, < 3.6.15"}, {"firstPatchedVersion": {"identifier": "3.7.7"}, "package": {"ecosystem": "COMPOSER", "name": "cakephp/cakephp"}, "severity": "MODERATE", "updatedAt": "2019-12-02T00:51:04Z", "vulnerableVersionRange": ">= 3.7.0, < 3.7.7"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTZybXEteDJodi12eHBw", "ghsaId": "GHSA-6rmq-x2hv-vxpp", "summary": "Moderate severity vulnerability that affects drupal/drupal", "description": "In Drupal Core versions 7.x prior to 7.62, 8.6.x prior to 8.6.6 and 8.5.x prior to 8.5.9; Drupal core uses the third-party PEAR Archive_Tar library. This library has released a security update which impacts some Drupal configurations. Refer to CVE-2018-1000888 for details", "identifiers": [{"type": "GHSA", "value": "GHSA-6rmq-x2hv-vxpp"}, {"type": "CVE", "value": "CVE-2019-6338"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:11:25Z", "updatedAt": "2019-12-02T18:11:25Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-6338"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "7.62.0"}, "package": {"ecosystem": "COMPOSER", "name": "drupal/drupal"}, "severity": "MODERATE", "updatedAt": "2019-12-02T00:34:51Z", "vulnerableVersionRange": ">= 7.0.0, < 7.62.0"}, {"firstPatchedVersion": {"identifier": "8.5.9"}, "package": {"ecosystem": "COMPOSER", "name": "drupal/drupal"}, "severity": "MODERATE", "updatedAt": "2019-12-02T00:34:51Z", "vulnerableVersionRange": ">= 8.0.0, < 8.5.9"}, {"firstPatchedVersion": {"identifier": "8.6.6"}, "package": {"ecosystem": "COMPOSER", "name": "drupal/drupal"}, "severity": "MODERATE", "updatedAt": "2019-12-02T00:34:51Z", "vulnerableVersionRange": ">= 8.6.0, < 8.6.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXg5Mmgtd21nMi02aHA3", "ghsaId": "GHSA-x92h-wmg2-6hp7", "summary": "Critical severity vulnerability that affects symfony/http-foundation and symfony/symfony", "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, HTTP Methods provided as verbs or using the override header may be treated as trusted input, but they are not validated, possibly causing SQL injection or XSS. This is related to symfony/http-foundation.", "identifiers": [{"type": "GHSA", "value": "GHSA-x92h-wmg2-6hp7"}, {"type": "CVE", "value": "CVE-2019-10913"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:10:24Z", "updatedAt": "2019-12-02T18:10:24Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10913"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.7.51"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 2.7.0, < 2.7.51"}, {"firstPatchedVersion": {"identifier": "2.8.50"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 2.8.0, < 2.8.50"}, {"firstPatchedVersion": {"identifier": "3.4.26"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.26"}, {"firstPatchedVersion": {"identifier": "4.1.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 4.0.0, < 4.1.12"}, {"firstPatchedVersion": {"identifier": "4.2.7"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 4.2.0, < 4.2.7"}, {"firstPatchedVersion": {"identifier": "2.7.51"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 2.7.0, < 2.7.51"}, {"firstPatchedVersion": {"identifier": "2.8.50"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 2.8.0, < 2.8.50"}, {"firstPatchedVersion": {"identifier": "3.4.26"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.26"}, {"firstPatchedVersion": {"identifier": "4.1.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 4.0.0, < 4.1.12"}, {"firstPatchedVersion": {"identifier": "4.2.7"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T19:49:37Z", "vulnerableVersionRange": ">= 4.2.0, < 4.2.7"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTR2cGMtNWp4NC1jZnFn", "ghsaId": "GHSA-4vpc-5jx4-cfqg", "summary": "Moderate severity vulnerability that affects symfony/security-http and symfony/symfony", "description": "An issue was discovered in Symfony 4.2.0 to 4.2.11 and 4.3.0 to 4.3.7. The ability to enumerate users was possible due to different handling depending on whether the user existed when making unauthorized attempts to use the switch users functionality. This is related to symfony/security.", "identifiers": [{"type": "GHSA", "value": "GHSA-4vpc-5jx4-cfqg"}, {"type": "CVE", "value": "CVE-2019-18886"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:09:21Z", "updatedAt": "2019-12-02T18:09:21Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18886"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.2.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/security-http"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:47:28Z", "vulnerableVersionRange": ">= 4.1.0, < 4.2.12"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/security-http"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:47:28Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}, {"firstPatchedVersion": {"identifier": "4.2.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:47:28Z", "vulnerableVersionRange": ">= 4.1.0, < 4.2.12"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:47:28Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXhoaDYtOTU2cS00cTY5", "ghsaId": "GHSA-xhh6-956q-4q69", "summary": "Moderate severity vulnerability that affects symfony/http-foundation, symfony/mime, and symfony/symfony", "description": "An issue was discovered in Symfony 2.8.0 through 2.8.50, 3.4.0 through 3.4.34, 4.2.0 through 4.2.11, and 4.3.0 through 4.3.7. If an application passes unvalidated user input as the file for which MIME type validation should occur, then arbitrary arguments are passed to the underlying file command. This is related to symfony/http-foundation (and symfony/mime in 4.3.x).", "identifiers": [{"type": "GHSA", "value": "GHSA-xhh6-956q-4q69"}, {"type": "CVE", "value": "CVE-2019-18888"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:08:19Z", "updatedAt": "2019-12-02T18:08:19Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18888"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.8.52"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 2.0.0, < 2.8.52"}, {"firstPatchedVersion": {"identifier": "3.4.35"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.35"}, {"firstPatchedVersion": {"identifier": "4.2.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 4.0.0, < 4.2.12"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/http-foundation"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/mime"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}, {"firstPatchedVersion": {"identifier": "2.8.52"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 2.0.0, < 2.8.52"}, {"firstPatchedVersion": {"identifier": "3.4.35"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.35"}, {"firstPatchedVersion": {"identifier": "4.2.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 4.0.0, < 4.2.12"}, {"firstPatchedVersion": {"identifier": "4.3.8"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-12-01T19:46:15Z", "vulnerableVersionRange": ">= 4.3.0, < 4.3.8"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWZwZmYtMzg0ai12eHE3", "ghsaId": "GHSA-fpff-384j-vxq7", "summary": "Moderate severity vulnerability that affects pimcore/pimcore", "description": "pimcore/pimcore before 6.3.0 is vulnerable to SQL Injection. An attacker with limited privileges (classes permission) can achieve a SQL injection that can lead in data leakage. The vulnerability can be exploited via 'id', 'storeId', 'pageSize' and 'tables' parameters, using a payload for trigger a time based or error based sql injection.", "identifiers": [{"type": "GHSA", "value": "GHSA-fpff-384j-vxq7"}, {"type": "CVE", "value": "CVE-2019-10763"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:05:13Z", "updatedAt": "2019-12-02T18:05:13Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10763"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "6.3.0"}, "package": {"ecosystem": "COMPOSER", "name": "pimcore/pimcore"}, "severity": "MODERATE", "updatedAt": "2019-11-27T02:55:08Z", "vulnerableVersionRange": "< 6.3.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTVwbTgtNDkyYy05MnA1", "ghsaId": "GHSA-5pm8-492c-92p5", "summary": "Moderate severity vulnerability that affects chartkick", "description": "Chartkick.js 3.1.0 through 3.1.3, as used in the Chartkick gem before 3.3.0 for Ruby, allows prototype pollution.", "identifiers": [{"type": "GHSA", "value": "GHSA-5pm8-492c-92p5"}, {"type": "CVE", "value": "CVE-2019-18841"}], "origin": "UNSPECIFIED", "publishedAt": "2019-12-02T18:04:11Z", "updatedAt": "2019-12-02T18:04:11Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-18841"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "3.3.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "chartkick"}, "severity": "MODERATE", "updatedAt": "2019-11-27T02:43:24Z", "vulnerableVersionRange": "< 3.3.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXBnd2otcHJwcS1qcGMy", "ghsaId": "GHSA-pgwj-prpq-jpc2", "summary": "Critical severity vulnerability that affects symfony/dependency-injection, symfony/proxy-manager-bridge, and symfony/symfony", "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, when service ids allow user input, this could allow for SQL Injection and remote code execution. This is related to symfony/dependency-injection.", "identifiers": [{"type": "GHSA", "value": "GHSA-pgwj-prpq-jpc2"}, {"type": "CVE", "value": "CVE-2019-10910"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-18T17:27:31Z", "updatedAt": "2019-12-01T18:00:48Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10910"}], "severity": "CRITICAL", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.7.51"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/proxy-manager-bridge"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 2.7.0, < 2.7.51"}, {"firstPatchedVersion": {"identifier": "2.8.50"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/proxy-manager-bridge"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 2.8.0, < 2.8.50"}, {"firstPatchedVersion": {"identifier": "3.4.26"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/proxy-manager-bridge"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.26"}, {"firstPatchedVersion": {"identifier": "4.1.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/proxy-manager-bridge"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 4.0.0, < 4.1.12"}, {"firstPatchedVersion": {"identifier": "4.2.7"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/proxy-manager-bridge"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 4.2.0, < 4.2.7"}, {"firstPatchedVersion": {"identifier": "2.7.51"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 2.7.0, < 2.7.51"}, {"firstPatchedVersion": {"identifier": "2.8.50"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 2.8.0, < 2.8.50"}, {"firstPatchedVersion": {"identifier": "3.4.26"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.26"}, {"firstPatchedVersion": {"identifier": "4.1.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 4.0.0, < 4.1.12"}, {"firstPatchedVersion": {"identifier": "4.2.7"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "CRITICAL", "updatedAt": "2019-12-01T18:00:47Z", "vulnerableVersionRange": ">= 4.2.0, < 4.2.7"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWc5OTYtcTVyOC13N2cy", "ghsaId": "GHSA-g996-q5r8-w7g2", "summary": "Moderate severity vulnerability that affects symfony/framework-bundle and symfony/symfony", "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, validation messages are not escaped, which can lead to XSS when user input is included. This is related to symfony/framework-bundle.", "identifiers": [{"type": "GHSA", "value": "GHSA-g996-q5r8-w7g2"}, {"type": "CVE", "value": "CVE-2019-10909"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-12T23:00:53Z", "updatedAt": "2019-12-01T17:58:09Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10909"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.7.51"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/framework-bundle"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 2.7.0, < 2.7.51"}, {"firstPatchedVersion": {"identifier": "2.8.50"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/framework-bundle"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 2.8.0, < 2.8.50"}, {"firstPatchedVersion": {"identifier": "3.4.26"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/framework-bundle"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.26"}, {"firstPatchedVersion": {"identifier": "4.1.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/framework-bundle"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 4.0.0, < 4.1.12"}, {"firstPatchedVersion": {"identifier": "4.2.7"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/framework-bundle"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 4.2.0, < 4.2.7"}, {"firstPatchedVersion": {"identifier": "2.7.51"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 2.7.0, < 2.7.51"}, {"firstPatchedVersion": {"identifier": "2.8.50"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 2.8.0, < 2.8.50"}, {"firstPatchedVersion": {"identifier": "3.4.26"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 3.0.0, < 3.4.26"}, {"firstPatchedVersion": {"identifier": "4.1.12"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 4.0.0, < 4.1.12"}, {"firstPatchedVersion": {"identifier": "4.2.7"}, "package": {"ecosystem": "COMPOSER", "name": "symfony/symfony"}, "severity": "MODERATE", "updatedAt": "2019-11-12T16:48:35Z", "vulnerableVersionRange": ">= 4.2.0, < 4.2.7"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWgyZjQtdjRjNC02d3g0", "ghsaId": "GHSA-h2f4-v4c4-6wx4", "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server", "description": "In Eclipse Jetty version 9.3.x and 9.4.x, the server is vulnerable to Denial of Service conditions if a remote client sends either large SETTINGs frames container containing many settings, or many small SETTINGs frames. The vulnerability is due to the additional CPU and memory allocations required to handle changed settings.", "identifiers": [{"type": "GHSA", "value": "GHSA-h2f4-v4c4-6wx4"}, {"type": "CVE", "value": "CVE-2018-12545"}], "origin": "UNSPECIFIED", "publishedAt": "2019-03-28T18:33:38Z", "updatedAt": "2019-11-29T17:50:04Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2018-12545"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "9.4.12.v20180830"}, "package": {"ecosystem": "MAVEN", "name": "org.eclipse.jetty:jetty-server"}, "severity": "MODERATE", "updatedAt": "2019-11-29T17:49:49Z", "vulnerableVersionRange": ">= 9.4.0, < 9.4.12.v20180830"}, {"firstPatchedVersion": {"identifier": "9.3.25.v20180904"}, "package": {"ecosystem": "MAVEN", "name": "org.eclipse.jetty:jetty-server"}, "severity": "MODERATE", "updatedAt": "2019-11-29T17:49:16Z", "vulnerableVersionRange": ">= 9.3.0, < 9.3.25.v20180904"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTg5cHgtd3czai1nMm1t", "ghsaId": "GHSA-89px-ww3j-g2mm", "summary": "High severity vulnerability that affects wagtail-2fa", "description": "## 2FA bypass through new device path\r\n\r\n### Impact\r\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\r\n\r\n### Patches\r\nThis problem has been patched in version 1.3.0.\r\n\r\n### Workarounds\r\nThere is no workaround at the moment.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [github.com/labd/wagtail-2fa](https://github.com/labd/wagtail-2fa)\r\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)\r\n\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-89px-ww3j-g2mm"}, {"type": "CVE", "value": "CVE-2019-16766"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-29T17:05:59Z", "updatedAt": "2019-11-29T17:05:59Z", "references": [{"url": "https://github.com/labd/wagtail-2fa/security/advisories/GHSA-89px-ww3j-g2mm"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16766"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.3.0"}, "package": {"ecosystem": "PIP", "name": "wagtail-2fa"}, "severity": "HIGH", "updatedAt": "2019-11-29T17:05:01Z", "vulnerableVersionRange": "< 1.3.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTU4MmYtcDRwZy14Yzc0", "ghsaId": "GHSA-582f-p4pg-xc74", "summary": "Moderate severity vulnerability that affects csv-parse", "description": "The csv-parse module before 4.4.6 for Node.js is vulnerable to Regular Expression Denial of Service. The __isInt() function contains a malformed regular expression that processes large crafted input very slowly. This is triggered when using the cast option.", "identifiers": [{"type": "GHSA", "value": "GHSA-582f-p4pg-xc74"}, {"type": "CVE", "value": "CVE-2019-17592"}], "origin": "UNSPECIFIED", "publishedAt": "2019-10-15T20:06:16Z", "updatedAt": "2019-11-27T18:03:24Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17592"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.4.6"}, "package": {"ecosystem": "NPM", "name": "csv-parse"}, "severity": "MODERATE", "updatedAt": "2019-10-15T15:55:04Z", "vulnerableVersionRange": "< 4.4.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTVtMnYtaGM2NC01Nmg2", "ghsaId": "GHSA-5m2v-hc64-56h6", "summary": "High severity vulnerability that affects rubyzip", "description": "In Rubyzip before 1.3.0, a crafted ZIP file can bypass application checks on ZIP entry sizes because data about the uncompressed size can be spoofed. This allows attackers to cause a denial of service (disk consumption).", "identifiers": [{"type": "GHSA", "value": "GHSA-5m2v-hc64-56h6"}, {"type": "CVE", "value": "CVE-2019-16892"}], "origin": "UNSPECIFIED", "publishedAt": "2019-09-30T16:05:32Z", "updatedAt": "2019-11-26T03:25:55Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16892"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.3.0"}, "package": {"ecosystem": "RUBYGEMS", "name": "rubyzip"}, "severity": "HIGH", "updatedAt": "2019-09-30T16:04:37Z", "vulnerableVersionRange": "< 1.3.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW01MngtMjlwcS13M3Z2", "ghsaId": "GHSA-m52x-29pq-w3vv", "summary": "Low severity vulnerability that affects pannellum", "description": "## XSS vulnerability\r\n\r\n### Impact\r\nURLs were not sanitized for data URIs (or `vbscript:`), allowing for potential XSS attacks. Such an attack would require a user to click on a hot spot to execute and would require an attacker-provided configuration. The most plausible potential attack would be if `pannellum.htm` was hosted on a domain that shared cookies with the targeted site's user authentication; an  `<iframe>` could then be embedded on the attacker's site using `pannellum.htm` from the targeted site, which would allow the attacker to potentially access information from the targeted site as the authenticated user (or worse if the targeted site did not have adequate CSRF protections) if the user clicked on a hot spot in the attacker's embedded panorama viewer.\r\n\r\n### Patches\r\nThis was patched in version 2.5.5.\r\n\r\n### Workarounds\r\nDon't host `pannellum.htm` on a domain that shares cookies with user authentication.\r\n\r\n### Acknowledgments\r\nThank you to Max Schaefer of GitHub Security Lab for reporting this issue.\r\n", "identifiers": [{"type": "GHSA", "value": "GHSA-m52x-29pq-w3vv"}, {"type": "CVE", "value": "CVE-2019-16763"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-22T18:18:03Z", "updatedAt": "2019-11-22T18:28:15Z", "references": [{"url": "https://github.com/mpetroff/pannellum/security/advisories/GHSA-m52x-29pq-w3vv"}, {"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16763"}], "severity": "LOW", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.5.5"}, "package": {"ecosystem": "NPM", "name": "pannellum"}, "severity": "LOW", "updatedAt": "2019-11-22T18:17:49Z", "vulnerableVersionRange": ">= 2.5.0, < 2.5.5"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXEzcDQtZ3c3ci13cWpj", "ghsaId": "GHSA-q3p4-gw7r-wqjc", "summary": "Moderate severity vulnerability that affects apache-airflow", "description": "A malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views. This also presented a Local File Disclosure vulnerability to any file readable by the webserver process.", "identifiers": [{"type": "GHSA", "value": "GHSA-q3p4-gw7r-wqjc"}, {"type": "CVE", "value": "CVE-2019-12417"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-22T13:45:22Z", "updatedAt": "2019-11-22T13:45:22Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12417"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.10.6"}, "package": {"ecosystem": "PIP", "name": "apache-airflow"}, "severity": "MODERATE", "updatedAt": "2019-11-21T04:09:25Z", "vulnerableVersionRange": "< 1.10.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTY4d2ctcXY2ci1qNHZw", "ghsaId": "GHSA-68wg-qv6r-j4vp", "summary": "High severity vulnerability that affects usmanhalalit/pixie", "description": "Pixie versions 1.0.x before 1.0.3, and 2.0.x before 2.0.2 allow SQL Injection in the limit() function due to improper sanitization.", "identifiers": [{"type": "GHSA", "value": "GHSA-68wg-qv6r-j4vp"}, {"type": "CVE", "value": "CVE-2019-10766"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T17:44:54Z", "updatedAt": "2019-11-20T17:44:54Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10766"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.0.3"}, "package": {"ecosystem": "COMPOSER", "name": "usmanhalalit/pixie"}, "severity": "HIGH", "updatedAt": "2019-11-20T17:42:52Z", "vulnerableVersionRange": "< 1.0.3"}, {"firstPatchedVersion": {"identifier": "2.0.2"}, "package": {"ecosystem": "COMPOSER", "name": "usmanhalalit/pixie"}, "severity": "HIGH", "updatedAt": "2019-11-20T17:42:52Z", "vulnerableVersionRange": ">= 2.0.0, < 2.0.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXZ2d3YtaDY5bS13ZzZm", "ghsaId": "GHSA-vvwv-h69m-wg6f", "summary": "Moderate severity vulnerability that affects phpoffice/phpspreadsheet", "description": "PHPOffice PhpSpreadsheet before 1.8.0 has an XXE issue. The XmlScanner decodes the sheet1.xml from an .xlsx to utf-8 if something else than UTF-8 is declared in the header. This was a security measurement to prevent CVE-2018-19277 but the fix is not sufficient. By double-encoding the the xml payload to utf-7 it is possible to bypass the check for the string ?<!ENTITY? and thus allowing for an xml external entity processing (XXE) attack.", "identifiers": [{"type": "GHSA", "value": "GHSA-vvwv-h69m-wg6f"}, {"type": "CVE", "value": "CVE-2019-12331"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:39:57Z", "updatedAt": "2019-11-20T01:39:57Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-12331"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.8.0"}, "package": {"ecosystem": "COMPOSER", "name": "phpoffice/phpspreadsheet"}, "severity": "MODERATE", "updatedAt": "2019-11-19T03:41:05Z", "vulnerableVersionRange": "< 1.8.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXhjcmctMjloNy1oNGNq", "ghsaId": "GHSA-xcrg-29h7-h4cj", "summary": "High severity vulnerability that affects phpoffice/phpspreadsheet", "description": "securityScan() in PHPOffice PhpSpreadsheet through 1.5.0 allows a bypass of protection mechanisms for XXE via UTF-7 encoding in a .xlsx file", "identifiers": [{"type": "GHSA", "value": "GHSA-xcrg-29h7-h4cj"}, {"type": "CVE", "value": "CVE-2018-19277"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:38:52Z", "updatedAt": "2019-11-20T01:38:52Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2018-19277"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.5.0"}, "package": {"ecosystem": "COMPOSER", "name": "phpoffice/phpspreadsheet"}, "severity": "HIGH", "updatedAt": "2019-11-19T03:40:53Z", "vulnerableVersionRange": "< 1.5.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLWh4ODMtcnBxZi1tMjY3", "ghsaId": "GHSA-hx83-rpqf-m267", "summary": "High severity vulnerability that affects org.apache.hadoop:hadoop-main", "description": "In Apache Hadoop 3.1.0 to 3.1.1, 3.0.0-alpha1 to 3.0.3, 2.9.0 to 2.9.1, and 2.0.0-alpha to 2.8.4, the user/group information can be corrupted across storing in fsimage and reading back from fsimage.", "identifiers": [{"type": "GHSA", "value": "GHSA-hx83-rpqf-m267"}, {"type": "CVE", "value": "CVE-2018-11768"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:38:00Z", "updatedAt": "2019-11-20T01:38:00Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2018-11768"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.8.5"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.hadoop:hadoop-main"}, "severity": "HIGH", "updatedAt": "2019-11-19T03:28:14Z", "vulnerableVersionRange": ">= 2.2.0, < 2.8.5"}, {"firstPatchedVersion": {"identifier": "2.9.2"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.hadoop:hadoop-main"}, "severity": "HIGH", "updatedAt": "2019-11-19T03:28:14Z", "vulnerableVersionRange": ">= 2.9.0, < 2.9.2"}, {"firstPatchedVersion": {"identifier": "3.1.1"}, "package": {"ecosystem": "MAVEN", "name": "org.apache.hadoop:hadoop-main"}, "severity": "HIGH", "updatedAt": "2019-11-19T03:28:14Z", "vulnerableVersionRange": ">= 3.0.0, < 3.1.1"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLXZyY2YtZzUzOS14Nmgz", "ghsaId": "GHSA-vrcf-g539-x6h3", "summary": "High severity vulnerability that affects rediswrapper", "description": "Uncontrolled deserialization of a pickled object in models.py in Frost Ming rediswrapper (aka Redis Wrapper) before 0.3.0 allows attackers to execute arbitrary scripts.", "identifiers": [{"type": "GHSA", "value": "GHSA-vrcf-g539-x6h3"}, {"type": "CVE", "value": "CVE-2019-17206"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:37:13Z", "updatedAt": "2019-11-20T01:37:13Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17206"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "0.3.0"}, "package": {"ecosystem": "PIP", "name": "rediswrapper"}, "severity": "HIGH", "updatedAt": "2019-11-19T03:20:15Z", "vulnerableVersionRange": "< 0.3.0"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTlnZ3AtNGpwci03cHBq", "ghsaId": "GHSA-9ggp-4jpr-7ppj", "summary": "High severity vulnerability that affects rpyc", "description": "In RPyC 4.1.x through 4.1.1, a remote attacker can dynamically modify object attributes to construct a remote procedure call that executes code for an RPyC service with default configuration settings.", "identifiers": [{"type": "GHSA", "value": "GHSA-9ggp-4jpr-7ppj"}, {"type": "CVE", "value": "CVE-2019-16328"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:35:53Z", "updatedAt": "2019-11-20T01:35:53Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-16328"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "4.1.2"}, "package": {"ecosystem": "PIP", "name": "rpyc"}, "severity": "HIGH", "updatedAt": "2019-11-19T03:15:02Z", "vulnerableVersionRange": ">= 4.1.0, < 4.1.2"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLW1yNnItODJ4NC1mNGpq", "ghsaId": "GHSA-mr6r-82x4-f4jj", "summary": "Moderate severity vulnerability that affects simplito/elliptic-php", "description": "In elliptic-php versions priot to 1.0.6, Timing attacks might be possible which can result in practical recovery of the long-term private key generated by the library under certain conditions. Leakage of a bit-length of the scalar during scalar multiplication is possible on an elliptic curve which might allow practical recovery of the long-term private key.", "identifiers": [{"type": "GHSA", "value": "GHSA-mr6r-82x4-f4jj"}, {"type": "CVE", "value": "CVE-2019-10764"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:34:50Z", "updatedAt": "2019-11-20T01:34:50Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10764"}], "severity": "MODERATE", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "1.0.6"}, "package": {"ecosystem": "COMPOSER", "name": "simplito/elliptic-php"}, "severity": "MODERATE", "updatedAt": "2019-11-19T03:07:04Z", "vulnerableVersionRange": "< 1.0.6"}]}}, {"id": "MDE2OlNlY3VyaXR5QWR2aXNvcnlHSFNBLTh2aDgtdmMyOC1tMmhm", "ghsaId": "GHSA-8vh8-vc28-m2hf", "summary": "High severity vulnerability that affects io.undertow:undertow-core", "description": "A flaw was found in, all under 2.0.20, in the Undertow DEBUG log for io.undertow.request.security. If enabled, an attacker could abuse this flaw to obtain the user's credentials from the log files.", "identifiers": [{"type": "GHSA", "value": "GHSA-8vh8-vc28-m2hf"}, {"type": "CVE", "value": "CVE-2019-10212"}], "origin": "UNSPECIFIED", "publishedAt": "2019-11-20T01:33:54Z", "updatedAt": "2019-11-20T01:33:54Z", "references": [{"url": "https://nvd.nist.gov/vuln/detail/CVE-2019-10212"}], "severity": "HIGH", "vulnerabilities": {"nodes": [{"firstPatchedVersion": {"identifier": "2.0.20"}, "package": {"ecosystem": "MAVEN", "name": "io.undertow:undertow-core"}, "severity": "HIGH", "updatedAt": "2019-11-19T02:49:59Z", "vulnerableVersionRange": "< 2.0.20"}]}}], "pageInfo": {"endCursor": "Y3Vyc29yOnYyOpK5MjAxOS0xMS0yMFQwMTozMzo1NCswMDowMM0HAw==", "hasNextPage": true}}}}
